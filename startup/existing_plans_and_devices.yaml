# This file is automatically generated. Edit at your own risk.
existing_devices:
  BPM4cent:
    classname: simpleBPM
    components:
      acqtime:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      centX:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      centY:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      compCent:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      compStats:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      datatype:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      maxval:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      minval:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      threshold:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: false
    is_movable: false
    is_readable: true
    module: haxpes.devices.hax_cam
  FEsh1:
    classname: EPS_Shutter
    components:
      cls:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      error:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      opn:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      state:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: false
    is_movable: false
    is_readable: true
    module: sst_base.shutters
  I0:
    classname: SRSADC
    components:
      exposure_time:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      gain:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      mean:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      median:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      npts:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      offset:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      rescale:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      srs570:
        classname: SRS570
        components:
          filter_reset:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          filter_type:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          gain_mode:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          gain_num:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          gain_unit:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_freq:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          invert:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_freq:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          reset:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          send_all:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: false
        is_readable: true
        module: sst_base.srs570
      std:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      sum:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      target:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: true
    is_movable: false
    is_readable: true
    module: sst_base.srs570
  I1:
    classname: SRSADC
    components:
      exposure_time:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      gain:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      mean:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      median:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      npts:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      offset:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      rescale:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      srs570:
        classname: SRS570
        components:
          filter_reset:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          filter_type:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          gain_mode:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          gain_num:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          gain_unit:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_freq:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          invert:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_freq:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          reset:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          send_all:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: false
        is_readable: true
        module: sst_base.srs570
      std:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      sum:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      target:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: true
    is_movable: false
    is_readable: true
    module: sst_base.srs570
  IK2600:
    classname: ophScalar
    components:
      exposure_time:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      gain:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      mean:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      median:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      npts:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      offset:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      rescale:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      std:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      sum:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      target:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: true
    is_movable: false
    is_readable: true
    module: nbs_bl.devices.detectors
  Idrain:
    classname: SRSADC
    components:
      exposure_time:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      gain:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      mean:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      median:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      npts:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      offset:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      rescale:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      srs570:
        classname: SRS570
        components:
          filter_reset:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          filter_type:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          gain_mode:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          gain_num:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          gain_unit:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_freq:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          invert:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_freq:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          reset:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          send_all:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: false
        is_readable: true
        module: sst_base.srs570
      std:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      sum:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      target:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: true
    is_movable: false
    is_readable: true
    module: sst_base.srs570
  L1:
    classname: FMBHexapodMirror
    components:
      pitch:
        classname: FMBHexapodMirrorAxis
        components:
          actuate:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          done:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          stop_signal:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: sst_base.mirrors
      roll:
        classname: FMBHexapodMirrorAxis
        components:
          actuate:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          done:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          stop_signal:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: sst_base.mirrors
      x:
        classname: FMBHexapodMirrorAxis
        components:
          actuate:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          done:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          stop_signal:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: sst_base.mirrors
      y:
        classname: FMBHexapodMirrorAxis
        components:
          actuate:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          done:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          stop_signal:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: sst_base.mirrors
      yaw:
        classname: FMBHexapodMirrorAxis
        components:
          actuate:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          done:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          stop_signal:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: sst_base.mirrors
      z:
        classname: FMBHexapodMirrorAxis
        components:
          actuate:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          done:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          stop_signal:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: sst_base.mirrors
    is_flyable: false
    is_movable: false
    is_readable: true
    module: sst_base.mirrors
  L1stripe:
    classname: EpicsSignal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  L2AB:
    classname: FMBHexapodMirror
    components:
      pitch:
        classname: FMBHexapodMirrorAxis
        components:
          actuate:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          done:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          stop_signal:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: sst_base.mirrors
      roll:
        classname: FMBHexapodMirrorAxis
        components:
          actuate:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          done:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          stop_signal:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: sst_base.mirrors
      x:
        classname: FMBHexapodMirrorAxis
        components:
          actuate:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          done:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          stop_signal:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: sst_base.mirrors
      y:
        classname: FMBHexapodMirrorAxis
        components:
          actuate:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          done:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          stop_signal:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: sst_base.mirrors
      yaw:
        classname: FMBHexapodMirrorAxis
        components:
          actuate:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          done:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          stop_signal:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: sst_base.mirrors
      z:
        classname: FMBHexapodMirrorAxis
        components:
          actuate:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          done:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          stop_signal:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: sst_base.mirrors
    is_flyable: false
    is_movable: false
    is_readable: true
    module: sst_base.mirrors
  L2stripe:
    classname: EpicsSignal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  L2type:
    classname: EpicsSignal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  L2wedge:
    classname: EpicsMotor
    components:
      acceleration:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      direction_of_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_forward:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_reverse:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_done_move:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_egu:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_is_moving:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_stop:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      offset_freeze_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      set_use_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset_dir:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_readback:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_setpoint:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      velocity:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.epics_motor
  M4A:
    classname: FMBHexapodMirror
    components:
      pitch:
        classname: FMBHexapodMirrorAxis
        components:
          actuate:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          done:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          stop_signal:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: sst_base.mirrors
      roll:
        classname: FMBHexapodMirrorAxis
        components:
          actuate:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          done:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          stop_signal:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: sst_base.mirrors
      x:
        classname: FMBHexapodMirrorAxis
        components:
          actuate:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          done:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          stop_signal:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: sst_base.mirrors
      y:
        classname: FMBHexapodMirrorAxis
        components:
          actuate:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          done:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          stop_signal:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: sst_base.mirrors
      yaw:
        classname: FMBHexapodMirrorAxis
        components:
          actuate:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          done:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          stop_signal:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: sst_base.mirrors
      z:
        classname: FMBHexapodMirrorAxis
        components:
          actuate:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          done:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          stop_signal:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: sst_base.mirrors
    is_flyable: false
    is_movable: false
    is_readable: true
    module: sst_base.mirrors
  PEY:
    classname: RBDSignal
    components:
      exposure_time:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      gain:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      mean:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      median:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      npts:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      offset:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      rbd9103:
        classname: RBD9103
        components:
          in_range:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          num_samples:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          num_samples_rbv:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          range_actual:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          range_ctrl:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          sample:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          sample_counter:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          sampling_mode:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          sampling_mode_ctrl:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          sampling_rate:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          sampling_rate_ctrl:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          sampling_status:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          stable:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          unit:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: false
        is_readable: true
        module: sst_base.rbd9103
      rescale:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      std:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      sum:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      target:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: true
    is_movable: false
    is_readable: true
    module: sst_base.rbd9103
  SlitAB:
    classname: EpicsMotor
    components:
      acceleration:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      direction_of_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_forward:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_reverse:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_done_move:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_egu:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_is_moving:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_stop:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      offset_freeze_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      set_use_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset_dir:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_readback:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_setpoint:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      velocity:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.epics_motor
  U42:
    classname: UndulatorMotor
    components:
      acceleration:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      direction_of_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_forward:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_reverse:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_done_move:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_egu:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_is_moving:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_stop:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      move_latch:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      offset_freeze_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      set_use_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      tolerance:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset_dir:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_readback:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_setpoint:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      velocity:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: true
    is_movable: true
    is_readable: true
    module: sst_base.energy
  beamon:
    classname: EpicsSignalRO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  beamselection:
    classname: EpicsSignal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  bragg:
    classname: DeadbandEpicsMotor
    components:
      acceleration:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      direction_of_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_forward:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_reverse:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_done_move:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_egu:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_is_moving:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_stop:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      move_latch:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      offset_freeze_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      set_use_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      tolerance:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset_dir:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_readback:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_setpoint:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      velocity:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: nbs_bl.devices.motors
  dcm:
    classname: DCM
    components:
      beam_offset:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      bragg:
        classname: DeadbandEpicsMotor
        components:
          acceleration:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          direction_of_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_forward:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_reverse:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_done_move:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_egu:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_is_moving:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_stop:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          move_latch:
            classname: Signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          offset_freeze_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          set_use_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          tolerance:
            classname: Signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset_dir:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          velocity:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: nbs_bl.devices.motors
      crystal:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      crystal_move:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      crystalstatus:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      d:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      energy:
        classname: PseudoSingle
        components:
          readback:
            classname: AttributeSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          setpoint:
            classname: AttributeSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.pseudopos
      hc:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      mode:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      para_default:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      readback:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      stop_signal:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      x2finepitch:
        classname: DeadbandEpicsMotor
        components:
          acceleration:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          direction_of_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_forward:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_reverse:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_done_move:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_egu:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_is_moving:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_stop:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          move_latch:
            classname: Signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          offset_freeze_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          set_use_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          tolerance:
            classname: Signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset_dir:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          velocity:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: nbs_bl.devices.motors
      x2fineroll:
        classname: DeadbandEpicsMotor
        components:
          acceleration:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          direction_of_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_forward:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_reverse:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_done_move:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_egu:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_is_moving:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_stop:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          move_latch:
            classname: Signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          offset_freeze_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          set_use_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          tolerance:
            classname: Signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset_dir:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          velocity:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: nbs_bl.devices.motors
      x2para:
        classname: DeadbandEpicsMotor
        components:
          acceleration:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          direction_of_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_forward:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_reverse:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_done_move:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_egu:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_is_moving:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_stop:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          move_latch:
            classname: Signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          offset_freeze_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          set_use_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          tolerance:
            classname: Signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset_dir:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          velocity:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: nbs_bl.devices.motors
      x2perp:
        classname: DeadbandEpicsMotor
        components:
          acceleration:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          direction_of_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_forward:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_reverse:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_done_move:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_egu:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_is_moving:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_stop:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          move_latch:
            classname: Signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          offset_freeze_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          set_use_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          tolerance:
            classname: Signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset_dir:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          velocity:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: nbs_bl.devices.motors
      x2pitch:
        classname: DeadbandEpicsMotor
        components:
          acceleration:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          direction_of_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_forward:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_reverse:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_done_move:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_egu:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_is_moving:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_stop:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          move_latch:
            classname: Signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          offset_freeze_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          set_use_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          tolerance:
            classname: Signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset_dir:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          velocity:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: nbs_bl.devices.motors
      x2roll:
        classname: DeadbandEpicsMotor
        components:
          acceleration:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          direction_of_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_forward:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_reverse:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_done_move:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_egu:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_is_moving:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_stop:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          move_latch:
            classname: Signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          offset_freeze_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          set_use_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          tolerance:
            classname: Signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset_dir:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          velocity:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: nbs_bl.devices.motors
    is_flyable: false
    is_movable: true
    is_readable: true
    module: haxpes.devices.dcm
  dcm_crystal:
    classname: EpicsSignalRO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  dm1:
    classname: PrettyMotor
    components:
      acceleration:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      direction_of_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_forward:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_reverse:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_done_move:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_egu:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_is_moving:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_stop:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      offset_freeze_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      set_use_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset_dir:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_readback:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_setpoint:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      velocity:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: sst_base.motors
  dm3:
    classname: PrettyMotor
    components:
      acceleration:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      direction_of_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_forward:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_reverse:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_done_move:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_egu:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_is_moving:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_stop:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      offset_freeze_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      set_use_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset_dir:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_readback:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_setpoint:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      velocity:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: sst_base.motors
  dm4:
    classname: PrettyMotor
    components:
      acceleration:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      direction_of_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_forward:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_reverse:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_done_move:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_egu:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_is_moving:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_stop:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      offset_freeze_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      set_use_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset_dir:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_readback:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_setpoint:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      velocity:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: sst_base.motors
  en:
    classname: PseudoSingle
    components:
      readback:
        classname: AttributeSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      setpoint:
        classname: AttributeSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.pseudopos
  enpostender:
    classname: energypos
    components:
      energy:
        classname: PseudoSingle
        components:
          readback:
            classname: AttributeSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          setpoint:
            classname: AttributeSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.pseudopos
      harmonic:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      mono:
        classname: DCM
        components:
          beam_offset:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          bragg:
            classname: DeadbandEpicsMotor
            components:
              acceleration:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              direction_of_travel:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              high_limit_switch:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              high_limit_travel:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              home_forward:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              home_reverse:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              low_limit_switch:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              low_limit_travel:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              motor_done_move:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              motor_egu:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              motor_is_moving:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              motor_stop:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              move_latch:
                classname: Signal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              offset_freeze_switch:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              set_use_switch:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              tolerance:
                classname: Signal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              user_offset:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              user_offset_dir:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              user_readback:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              user_setpoint:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              velocity:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: nbs_bl.devices.motors
          crystal:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          crystal_move:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          crystalstatus:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          d:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          energy:
            classname: PseudoSingle
            components:
              readback:
                classname: AttributeSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              setpoint:
                classname: AttributeSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.pseudopos
          hc:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          mode:
            classname: Signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          para_default:
            classname: Signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          stop_signal:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          x2finepitch:
            classname: DeadbandEpicsMotor
            components:
              acceleration:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              direction_of_travel:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              high_limit_switch:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              high_limit_travel:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              home_forward:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              home_reverse:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              low_limit_switch:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              low_limit_travel:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              motor_done_move:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              motor_egu:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              motor_is_moving:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              motor_stop:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              move_latch:
                classname: Signal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              offset_freeze_switch:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              set_use_switch:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              tolerance:
                classname: Signal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              user_offset:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              user_offset_dir:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              user_readback:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              user_setpoint:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              velocity:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: nbs_bl.devices.motors
          x2fineroll:
            classname: DeadbandEpicsMotor
            components:
              acceleration:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              direction_of_travel:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              high_limit_switch:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              high_limit_travel:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              home_forward:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              home_reverse:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              low_limit_switch:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              low_limit_travel:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              motor_done_move:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              motor_egu:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              motor_is_moving:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              motor_stop:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              move_latch:
                classname: Signal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              offset_freeze_switch:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              set_use_switch:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              tolerance:
                classname: Signal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              user_offset:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              user_offset_dir:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              user_readback:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              user_setpoint:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              velocity:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: nbs_bl.devices.motors
          x2para:
            classname: DeadbandEpicsMotor
            components:
              acceleration:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              direction_of_travel:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              high_limit_switch:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              high_limit_travel:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              home_forward:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              home_reverse:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              low_limit_switch:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              low_limit_travel:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              motor_done_move:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              motor_egu:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              motor_is_moving:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              motor_stop:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              move_latch:
                classname: Signal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              offset_freeze_switch:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              set_use_switch:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              tolerance:
                classname: Signal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              user_offset:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              user_offset_dir:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              user_readback:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              user_setpoint:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              velocity:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: nbs_bl.devices.motors
          x2perp:
            classname: DeadbandEpicsMotor
            components:
              acceleration:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              direction_of_travel:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              high_limit_switch:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              high_limit_travel:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              home_forward:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              home_reverse:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              low_limit_switch:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              low_limit_travel:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              motor_done_move:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              motor_egu:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              motor_is_moving:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              motor_stop:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              move_latch:
                classname: Signal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              offset_freeze_switch:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              set_use_switch:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              tolerance:
                classname: Signal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              user_offset:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              user_offset_dir:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              user_readback:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              user_setpoint:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              velocity:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: nbs_bl.devices.motors
          x2pitch:
            classname: DeadbandEpicsMotor
            components:
              acceleration:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              direction_of_travel:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              high_limit_switch:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              high_limit_travel:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              home_forward:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              home_reverse:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              low_limit_switch:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              low_limit_travel:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              motor_done_move:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              motor_egu:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              motor_is_moving:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              motor_stop:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              move_latch:
                classname: Signal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              offset_freeze_switch:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              set_use_switch:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              tolerance:
                classname: Signal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              user_offset:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              user_offset_dir:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              user_readback:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              user_setpoint:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              velocity:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: nbs_bl.devices.motors
          x2roll:
            classname: DeadbandEpicsMotor
            components:
              acceleration:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              direction_of_travel:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              high_limit_switch:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              high_limit_travel:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              home_forward:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              home_reverse:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              low_limit_switch:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              low_limit_travel:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              motor_done_move:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              motor_egu:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              motor_is_moving:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              motor_stop:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              move_latch:
                classname: Signal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              offset_freeze_switch:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              set_use_switch:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              tolerance:
                classname: Signal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              user_offset:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              user_offset_dir:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              user_readback:
                classname: EpicsSignalRO
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              user_setpoint:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
              velocity:
                classname: EpicsSignal
                is_flyable: false
                is_movable: true
                is_readable: true
                module: ophyd.signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: nbs_bl.devices.motors
        is_flyable: false
        is_movable: true
        is_readable: true
        module: haxpes.devices.dcm
      offset_gap:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      u42:
        classname: UndulatorMotor
        components:
          acceleration:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          direction_of_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_forward:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_reverse:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_done_move:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_egu:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_is_moving:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_stop:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          move_latch:
            classname: Signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          offset_freeze_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          set_use_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          tolerance:
            classname: Signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset_dir:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          velocity:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: true
        is_movable: true
        is_readable: true
        module: sst_base.energy
      u42val:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: haxpes.devices.energy_tender
  eslit:
    classname: PseudoSingle
    components:
      readback:
        classname: AttributeSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      setpoint:
        classname: AttributeSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.pseudopos
  exposureMotor:
    classname: SoftPositioner
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.positioner
  fbhor:
    classname: pid
    components:
      K_D:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      K_I:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      K_P:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      dband:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      in_high:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      in_low:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      lastinput:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      mtr_out:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      out_high:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      out_low:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      permitlatch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      pid_out:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      pidcontrol:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      setpoint:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      updaterate:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: false
    is_movable: false
    is_readable: true
    module: haxpes.devices.pid_feedback
  fbvert:
    classname: pid
    components:
      K_D:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      K_I:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      K_P:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      dband:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      in_high:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      in_low:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      lastinput:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      mtr_out:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      out_high:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      out_low:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      permitlatch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      pid_out:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      pidcontrol:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      setpoint:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      updaterate:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: false
    is_movable: false
    is_readable: true
    module: haxpes.devices.pid_feedback
  floodgun:
    classname: FloodGun
    components:
      Iemis:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      Vgrid:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      energy:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      startProc:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      stopProc:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: false
    is_movable: false
    is_readable: true
    module: haxpes.devices.floodgun
  fs4:
    classname: EPS_Shutter
    components:
      cls:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      error:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      opn:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      state:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: false
    is_movable: false
    is_readable: true
    module: sst_base.shutters
  gapoffset:
    classname: Signal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  gonilateral:
    classname: PrettyMotor
    components:
      acceleration:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      direction_of_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_forward:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_reverse:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_done_move:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_egu:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_is_moving:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_stop:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      offset_freeze_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      set_use_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset_dir:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_readback:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_setpoint:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      velocity:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: sst_base.motors
  gv10:
    classname: EPS_Shutter
    components:
      cls:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      error:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      opn:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      state:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: false
    is_movable: false
    is_readable: true
    module: sst_base.shutters
  h:
    classname: EpicsSignal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  haxSMU:
    classname: SMU
    components:
      AutorangeIMeas:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      AutorangeISource:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      AutorangeVMeas:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      AutorangeVSource:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      ILim:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      IMeas:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      IMeasRange:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      ISource:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      ISourceRange:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      OutputEnable:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      SourceSelect:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      VLim:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      VMeas:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      VSource:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      VSourceRange:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: false
    is_movable: false
    is_readable: true
    module: haxpes.devices.k2600b
  haxslt:
    classname: QuadSlits
    components:
      bottom:
        classname: EpicsMotor
        components:
          acceleration:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          direction_of_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_forward:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_reverse:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_done_move:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_egu:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_is_moving:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_stop:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          offset_freeze_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          set_use_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset_dir:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          velocity:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.epics_motor
      hcenter:
        classname: PseudoSingle
        components:
          readback:
            classname: AttributeSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          setpoint:
            classname: AttributeSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.pseudopos
      hsize:
        classname: PseudoSingle
        components:
          readback:
            classname: AttributeSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          setpoint:
            classname: AttributeSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.pseudopos
      inboard:
        classname: EpicsMotor
        components:
          acceleration:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          direction_of_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_forward:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_reverse:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_done_move:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_egu:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_is_moving:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_stop:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          offset_freeze_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          set_use_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset_dir:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          velocity:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.epics_motor
      outboard:
        classname: EpicsMotor
        components:
          acceleration:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          direction_of_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_forward:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_reverse:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_done_move:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_egu:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_is_moving:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_stop:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          offset_freeze_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          set_use_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset_dir:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          velocity:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.epics_motor
      top:
        classname: EpicsMotor
        components:
          acceleration:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          direction_of_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_forward:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_reverse:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_done_move:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_egu:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_is_moving:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_stop:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          offset_freeze_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          set_use_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset_dir:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          velocity:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.epics_motor
      vcenter:
        classname: PseudoSingle
        components:
          readback:
            classname: AttributeSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          setpoint:
            classname: AttributeSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.pseudopos
      vsize:
        classname: PseudoSingle
        components:
          readback:
            classname: AttributeSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          setpoint:
            classname: AttributeSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.pseudopos
    is_flyable: false
    is_movable: true
    is_readable: true
    module: sst_base.slits
  manipulator:
    classname: Manipulator
    components:
      r:
        classname: FlyableMotor
        components:
          acceleration:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          direction_of_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_forward:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_reverse:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_done_move:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_egu:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_is_moving:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_stop:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          offset_freeze_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          set_use_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset_dir:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          velocity:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: true
        is_movable: true
        is_readable: true
        module: nbs_bl.devices.motors
      sr:
        classname: PseudoSingle
        components:
          readback:
            classname: AttributeSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          setpoint:
            classname: AttributeSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.pseudopos
      sx:
        classname: PseudoSingle
        components:
          readback:
            classname: AttributeSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          setpoint:
            classname: AttributeSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.pseudopos
      sy:
        classname: PseudoSingle
        components:
          readback:
            classname: AttributeSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          setpoint:
            classname: AttributeSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.pseudopos
      sz:
        classname: PseudoSingle
        components:
          readback:
            classname: AttributeSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          setpoint:
            classname: AttributeSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.pseudopos
      x:
        classname: FlyableMotor
        components:
          acceleration:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          direction_of_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_forward:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_reverse:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_done_move:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_egu:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_is_moving:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_stop:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          offset_freeze_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          set_use_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset_dir:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          velocity:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: true
        is_movable: true
        is_readable: true
        module: nbs_bl.devices.motors
      y:
        classname: FlyableMotor
        components:
          acceleration:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          direction_of_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_forward:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_reverse:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_done_move:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_egu:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_is_moving:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_stop:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          offset_freeze_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          set_use_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset_dir:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          velocity:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: true
        is_movable: true
        is_readable: true
        module: nbs_bl.devices.motors
      z:
        classname: FlyableMotor
        components:
          acceleration:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          direction_of_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_forward:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_reverse:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_done_move:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_egu:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_is_moving:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_stop:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          offset_freeze_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          set_use_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset_dir:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          velocity:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: true
        is_movable: true
        is_readable: true
        module: nbs_bl.devices.motors
    is_flyable: false
    is_movable: true
    is_readable: true
    module: sst_base.manipulator
  mono:
    classname: DCM
    components:
      beam_offset:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      bragg:
        classname: DeadbandEpicsMotor
        components:
          acceleration:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          direction_of_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_forward:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_reverse:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_done_move:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_egu:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_is_moving:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_stop:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          move_latch:
            classname: Signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          offset_freeze_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          set_use_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          tolerance:
            classname: Signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset_dir:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          velocity:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: nbs_bl.devices.motors
      crystal:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      crystal_move:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      crystalstatus:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      d:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      energy:
        classname: PseudoSingle
        components:
          readback:
            classname: AttributeSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          setpoint:
            classname: AttributeSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.pseudopos
      hc:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      mode:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      para_default:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      readback:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      stop_signal:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      x2finepitch:
        classname: DeadbandEpicsMotor
        components:
          acceleration:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          direction_of_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_forward:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_reverse:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_done_move:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_egu:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_is_moving:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_stop:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          move_latch:
            classname: Signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          offset_freeze_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          set_use_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          tolerance:
            classname: Signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset_dir:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          velocity:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: nbs_bl.devices.motors
      x2fineroll:
        classname: DeadbandEpicsMotor
        components:
          acceleration:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          direction_of_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_forward:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_reverse:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_done_move:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_egu:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_is_moving:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_stop:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          move_latch:
            classname: Signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          offset_freeze_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          set_use_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          tolerance:
            classname: Signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset_dir:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          velocity:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: nbs_bl.devices.motors
      x2para:
        classname: DeadbandEpicsMotor
        components:
          acceleration:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          direction_of_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_forward:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_reverse:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_done_move:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_egu:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_is_moving:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_stop:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          move_latch:
            classname: Signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          offset_freeze_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          set_use_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          tolerance:
            classname: Signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset_dir:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          velocity:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: nbs_bl.devices.motors
      x2perp:
        classname: DeadbandEpicsMotor
        components:
          acceleration:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          direction_of_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_forward:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_reverse:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_done_move:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_egu:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_is_moving:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_stop:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          move_latch:
            classname: Signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          offset_freeze_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          set_use_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          tolerance:
            classname: Signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset_dir:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          velocity:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: nbs_bl.devices.motors
      x2pitch:
        classname: DeadbandEpicsMotor
        components:
          acceleration:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          direction_of_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_forward:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_reverse:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_done_move:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_egu:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_is_moving:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_stop:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          move_latch:
            classname: Signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          offset_freeze_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          set_use_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          tolerance:
            classname: Signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset_dir:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          velocity:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: nbs_bl.devices.motors
      x2roll:
        classname: DeadbandEpicsMotor
        components:
          acceleration:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          direction_of_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_forward:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_reverse:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_done_move:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_egu:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_is_moving:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_stop:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          move_latch:
            classname: Signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          offset_freeze_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          set_use_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          tolerance:
            classname: Signal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset_dir:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          velocity:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: nbs_bl.devices.motors
    is_flyable: false
    is_movable: true
    is_readable: true
    module: haxpes.devices.dcm
  nBPM:
    classname: PrettyMotor
    components:
      acceleration:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      direction_of_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_forward:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_reverse:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_done_move:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_egu:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_is_moving:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_stop:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      offset_freeze_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      set_use_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset_dir:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_readback:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_setpoint:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      velocity:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: sst_base.motors
  psh1:
    classname: EPS_Shutter
    components:
      cls:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      error:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      opn:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      state:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: false
    is_movable: false
    is_readable: true
    module: sst_base.shutters
  psh2:
    classname: EPS_Shutter
    components:
      cls:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      error:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      opn:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      state:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: false
    is_movable: false
    is_readable: true
    module: sst_base.shutters
  psh4:
    classname: EPS_Shutter
    components:
      cls:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      error:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      opn:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      state:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: false
    is_movable: false
    is_readable: true
    module: sst_base.shutters
  psh5:
    classname: EPS_Shutter
    components:
      cls:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      error:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      opn:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      state:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: false
    is_movable: false
    is_readable: true
    module: sst_base.shutters
  ring_current:
    classname: EpicsSignalRO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  ring_status:
    classname: EpicsSignalRO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  run_mode:
    classname: current_run_mode
    components:
      current_mode:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: false
    is_movable: false
    is_readable: true
    module: haxpes.hax_monitors
  sample_bias:
    classname: EpicsSignal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  sampr:
    classname: FlyableMotor
    components:
      acceleration:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      direction_of_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_forward:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_reverse:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_done_move:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_egu:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_is_moving:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_stop:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      offset_freeze_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      set_use_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset_dir:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_readback:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_setpoint:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      velocity:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: true
    is_movable: true
    is_readable: true
    module: nbs_bl.devices.motors
  sampx:
    classname: FlyableMotor
    components:
      acceleration:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      direction_of_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_forward:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_reverse:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_done_move:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_egu:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_is_moving:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_stop:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      offset_freeze_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      set_use_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset_dir:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_readback:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_setpoint:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      velocity:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: true
    is_movable: true
    is_readable: true
    module: nbs_bl.devices.motors
  sampy:
    classname: FlyableMotor
    components:
      acceleration:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      direction_of_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_forward:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_reverse:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_done_move:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_egu:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_is_moving:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_stop:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      offset_freeze_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      set_use_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset_dir:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_readback:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_setpoint:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      velocity:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: true
    is_movable: true
    is_readable: true
    module: nbs_bl.devices.motors
  sampz:
    classname: FlyableMotor
    components:
      acceleration:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      direction_of_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_forward:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_reverse:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_done_move:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_egu:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_is_moving:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_stop:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      offset_freeze_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      set_use_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset_dir:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_readback:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_setpoint:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      velocity:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: true
    is_movable: true
    is_readable: true
    module: nbs_bl.devices.motors
  slt_dm1:
    classname: QuadSlits
    components:
      bottom:
        classname: EpicsMotor
        components:
          acceleration:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          direction_of_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_forward:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_reverse:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_done_move:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_egu:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_is_moving:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_stop:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          offset_freeze_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          set_use_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset_dir:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          velocity:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.epics_motor
      hcenter:
        classname: PseudoSingle
        components:
          readback:
            classname: AttributeSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          setpoint:
            classname: AttributeSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.pseudopos
      hsize:
        classname: PseudoSingle
        components:
          readback:
            classname: AttributeSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          setpoint:
            classname: AttributeSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.pseudopos
      inboard:
        classname: EpicsMotor
        components:
          acceleration:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          direction_of_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_forward:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_reverse:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_done_move:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_egu:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_is_moving:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_stop:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          offset_freeze_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          set_use_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset_dir:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          velocity:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.epics_motor
      outboard:
        classname: EpicsMotor
        components:
          acceleration:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          direction_of_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_forward:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_reverse:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_done_move:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_egu:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_is_moving:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_stop:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          offset_freeze_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          set_use_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset_dir:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          velocity:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.epics_motor
      top:
        classname: EpicsMotor
        components:
          acceleration:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          direction_of_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          high_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_forward:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          home_reverse:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_switch:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          low_limit_travel:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_done_move:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_egu:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_is_moving:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          motor_stop:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          offset_freeze_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          set_use_switch:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_offset_dir:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_readback:
            classname: EpicsSignalRO
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          user_setpoint:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          velocity:
            classname: EpicsSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.epics_motor
      vcenter:
        classname: PseudoSingle
        components:
          readback:
            classname: AttributeSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          setpoint:
            classname: AttributeSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.pseudopos
      vsize:
        classname: PseudoSingle
        components:
          readback:
            classname: AttributeSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
          setpoint:
            classname: AttributeSignal
            is_flyable: false
            is_movable: true
            is_readable: true
            module: ophyd.signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.pseudopos
    is_flyable: false
    is_movable: true
    is_readable: true
    module: sst_base.slits
  softbeamenable:
    classname: EpicsSignalRO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  x2finepitch:
    classname: DeadbandEpicsMotor
    components:
      acceleration:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      direction_of_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_forward:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_reverse:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_done_move:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_egu:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_is_moving:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_stop:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      move_latch:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      offset_freeze_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      set_use_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      tolerance:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset_dir:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_readback:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_setpoint:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      velocity:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: nbs_bl.devices.motors
  x2fineroll:
    classname: DeadbandEpicsMotor
    components:
      acceleration:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      direction_of_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_forward:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_reverse:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_done_move:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_egu:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_is_moving:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_stop:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      move_latch:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      offset_freeze_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      set_use_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      tolerance:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset_dir:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_readback:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_setpoint:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      velocity:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: nbs_bl.devices.motors
  x2perp:
    classname: DeadbandEpicsMotor
    components:
      acceleration:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      direction_of_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_forward:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_reverse:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_done_move:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_egu:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_is_moving:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_stop:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      move_latch:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      offset_freeze_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      set_use_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      tolerance:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset_dir:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_readback:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_setpoint:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      velocity:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: nbs_bl.devices.motors
  x2pitch:
    classname: DeadbandEpicsMotor
    components:
      acceleration:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      direction_of_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_forward:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_reverse:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_done_move:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_egu:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_is_moving:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_stop:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      move_latch:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      offset_freeze_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      set_use_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      tolerance:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset_dir:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_readback:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_setpoint:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      velocity:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: nbs_bl.devices.motors
  x2roll:
    classname: DeadbandEpicsMotor
    components:
      acceleration:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      direction_of_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      high_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_forward:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      home_reverse:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_switch:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      low_limit_travel:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_done_move:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_egu:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_is_moving:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      motor_stop:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      move_latch:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      offset_freeze_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      set_use_switch:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      tolerance:
        classname: Signal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_offset_dir:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_readback:
        classname: EpicsSignalRO
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      user_setpoint:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
      velocity:
        classname: EpicsSignal
        is_flyable: false
        is_movable: true
        is_readable: true
        module: ophyd.signal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: nbs_bl.devices.motors
  xps_analyzer:
    classname: EpicsSignal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
existing_plans:
  FG_off:
    module: haxpes.plans.bl_op_plans
    name: FG_off
    parameters:
    - annotation:
        type: float
      default: '10'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: delay_seconds
    properties:
      is_generator: true
  FG_on:
    module: haxpes.plans.bl_op_plans
    name: FG_on
    parameters:
    - annotation:
        type: float
      default: '11'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: energy
    - annotation:
        type: float
      default: '75'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: Vgrid
    - annotation:
        type: float
      default: '10'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: delay_seconds
    properties:
      is_generator: true
  SES_XPSScan:
    module: haxpes.plans.scans
    name: SES_XPSScan
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: filename
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: core_line
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: en_cal
    properties:
      is_generator: true
  XPSScan:
    module: nbs_bl.plans.preprocessors
    name: XPSScan
    parameters:
    - description: The region dictionary for the XPS scan, with keys "energy_center",
        "energy_width", "energy_step", "energy_type" and "region_name"
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: region_dictionary
    - description: The analyzer settings for the XPS scan, with keys "dwell_time",
        "pass_energy", "lens_mode"
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: analyzer_settings
    - annotation:
        type: typing.Union[float, collections.abc.Iterable[float]]
      default: '0.0'
      description: Time delay in seconds between successive readings; default is 0.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: delay
    - default: '1'
      description: The number of sweeps to perform. Default is 1.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: sweeps
    - default: None
      description: If not None, will set the beamline energy prior to the plan start.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: energy
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: export_filename
    - default: None
      description: "hook for customizing action of inner loop (messages per step)\n\
        Expected signature ::\n\n   def f(detectors: Iterable[OphydObj]) -> Generator[Msg]:\n\
        \       ..."
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_shot
    - default: 'False'
      description: If True, do not install suspenders
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: skip_suspenders
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A comment that will be added into the run metadata. If not provided,
        no comment will be added.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: comment
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A group name label that will be added into the run metadata.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group_name
    - annotation:
        type: list
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: plot_detectors
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The sample id. If given, the selected sample metadata is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample
    - annotation:
        type: typing.Optional[dict]
      default: '{}'
      description: 'A dictionary of positions relative to the sample center. Parameters
        not given will be assumed to

        be the default for the sampleholder (typically moving the sample into the
        beam at a typical angle)'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample_position
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The energy reference sample. If given, the selected reference sample
        is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: eref_sample
    - annotation:
        type: typing.Optional[float]
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: polarization
    - annotation:
        type: int
      default: '1'
      description: The number of times to repeat the entire scan
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: repeat
    - default: 'True'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: open_shutter
    - annotation:
        type: typing.Optional[dict]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  _mv:
    description: Move one or more devices to a setpoint. Wait for all to complete.
    module: bluesky.plan_stubs
    name: mv
    parameters:
    - annotation:
        type: typing.Union[__MOVABLE__, typing.Any]
      convert_device_names: true
      description: device1, value1, device2, value2, ...
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - annotation:
        type: typing.Optional[collections.abc.Hashable]
      default: None
      description: Used to mark these as a unit to be waited on.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group
    - description: passed to obj.set()
      kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: false
  _mvr:
    description: Move one or more devices to a relative setpoint. Wait for all to
      complete.
    module: bluesky.plan_stubs
    name: mvr
    parameters:
    - annotation:
        type: typing.Union[__MOVABLE__, typing.Any]
      convert_device_names: true
      description: device1, value1, device2, value2, ...
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - annotation:
        type: typing.Optional[collections.abc.Hashable]
      default: None
      description: Used to mark these as a unit to be waited on.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group
    - description: passed to obj.set()
      kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: false
  abs_set:
    description: Set a value. Optionally, wait for it to complete before continuing.
    module: bluesky.plan_stubs
    name: abs_set
    parameters:
    - annotation:
        type: __MOVABLE__
      convert_device_names: true
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: obj
    - annotation:
        type: typing.Any
      description: passed to obj.set()
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - annotation:
        type: typing.Optional[collections.abc.Hashable]
      default: None
      description: identifier used by 'wait'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group
    - annotation:
        type: bool
      default: 'False'
      description: 'If True, wait for completion before processing any more messages.

        False by default.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: wait
    - description: passed to obj.set()
      kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: false
  adaptive_scan:
    description: Scan over one variable with adaptively tuned step size.
    module: bluesky.plans
    name: adaptive_scan
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      description: list of 'readable' objects
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - annotation:
        type: str
      description: data field whose output is the focus of the adaptive tuning
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: target_field
    - description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: motor
    - annotation:
        type: float
      description: starting position of motor
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: start
    - annotation:
        type: float
      description: ending position of motor
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: stop
    - annotation:
        type: float
      description: smallest step for fast-changing regions
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: min_step
    - annotation:
        type: float
      description: largest step for slow-chaning regions
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: max_step
    - annotation:
        type: float
      description: desired fractional change in detector signal between steps
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: target_delta
    - annotation:
        type: bool
      description: whether backward steps are allowed -- this is concern with some
        motors
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: backstep
    - annotation:
        type: typing.Optional[float]
      default: '0.8'
      description: threshold for going backward and rescanning a region, default is
        0.8
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: threshold
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  align_beam_xps:
    module: haxpes.tender.tender_ops
    name: align_beam_xps
    parameters:
    - default: 'False'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: PlaneMirror
    properties:
      is_generator: true
  align_sample_xps:
    description: 'function for aligning sample x position with analyzer counts.

      optimization_paramter weights the centering of the detector image vs. intensity.

      it probably needs to be quite large to actually matter ... REQUIRES TESTING.

      Only works for PEAK analyzer, not for SES.'
    module: haxpes.hax_ops
    name: align_sample_xps
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: analyzer_KE
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: anset
    - default: '10'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: optimization_parameter
    properties:
      is_generator: true
  au4f_xps:
    description: 'Au4f

      Perform a binding energy XPS scan for Au4f

      Start: 78.0 eV

      Stop: 98.0 eV

      Step size: 0.05 eV'
    module: nbs_bl.plans.preprocessors
    name: au4f_xps
    parameters:
    - description: The analyzer settings for the XPS scan, with keys "dwell_time",
        "pass_energy", "lens_mode"
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: analyzer_settings
    - annotation:
        type: typing.Union[float, collections.abc.Iterable[float]]
      default: '0.0'
      description: Time delay in seconds between successive readings; default is 0.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: delay
    - default: '1'
      description: The number of sweeps to perform. Default is 1.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: sweeps
    - default: None
      description: If not None, will set the beamline energy prior to the plan start.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: energy
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: export_filename
    - default: None
      description: "hook for customizing action of inner loop (messages per step)\n\
        Expected signature ::\n\n   def f(detectors: Iterable[OphydObj]) -> Generator[Msg]:\n\
        \       ..."
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_shot
    - default: 'False'
      description: If True, do not install suspenders
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: skip_suspenders
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A comment that will be added into the run metadata. If not provided,
        no comment will be added.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: comment
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A group name label that will be added into the run metadata.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group_name
    - annotation:
        type: list
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: plot_detectors
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The sample id. If given, the selected sample metadata is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample
    - annotation:
        type: typing.Optional[dict]
      default: '{}'
      description: 'A dictionary of positions relative to the sample center. Parameters
        not given will be assumed to

        be the default for the sampleholder (typically moving the sample into the
        beam at a typical angle)'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample_position
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The energy reference sample. If given, the selected reference sample
        is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: eref_sample
    - annotation:
        type: typing.Optional[float]
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: polarization
    - annotation:
        type: int
      default: '1'
      description: The number of times to repeat the entire scan
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: repeat
    - default: 'True'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: open_shutter
    - annotation:
        type: typing.Optional[dict]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  aum5_short:
    description: 'Perform an in-place xas scan for  with energy pattern [2275, 0.5,
      2285] '
    module: nbs_bl.plans.preprocessors
    name: aum5_short
    parameters:
    - default: None
      description: 'hook for customizing action of inner loop (messages per step)

        Expected signature:

        ``f(detectors, motor, step) -> plan (a generator)``'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - default: 'False'
      description: If True, do not install suspenders
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: skip_suspenders
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A comment that will be added into the run metadata. If not provided,
        no comment will be added.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: comment
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A group name label that will be added into the run metadata.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group_name
    - annotation:
        type: list
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: plot_detectors
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'The exposure time in seconds for all detectors, by default None.

        If None, do not set any exposure time, and assume that detectors are already
        set'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: dwell
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The sample id. If given, the selected sample metadata is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample
    - annotation:
        type: typing.Optional[dict]
      default: '{}'
      description: 'A dictionary of positions relative to the sample center. Parameters
        not given will be assumed to

        be the default for the sampleholder (typically moving the sample into the
        beam at a typical angle)'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample_position
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The energy reference sample. If given, the selected reference sample
        is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: eref_sample
    - annotation:
        type: typing.Optional[float]
      default: None
      description: If not None, will set the beamline energy prior to the plan start.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: energy
    - annotation:
        type: typing.Optional[float]
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: polarization
    - annotation:
        type: int
      default: '1'
      description: The number of times to repeat the entire scan
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: repeat
    - default: 'True'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: open_shutter
    - default: '[]'
      description: A list of extra detectors to be activated for the scan, by default
        [].
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: extra_dets
    - annotation:
        type: float
      default: '0'
      description: A value to shift all start/stop positions by
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: shift
    - annotation:
        type: typing.Optional[dict]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  aum5_xas:
    description: 'Perform an in-place xas scan for  with energy pattern [2185, 0.5,
      2285] '
    module: nbs_bl.plans.preprocessors
    name: aum5_xas
    parameters:
    - default: None
      description: 'hook for customizing action of inner loop (messages per step)

        Expected signature:

        ``f(detectors, motor, step) -> plan (a generator)``'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - default: 'False'
      description: If True, do not install suspenders
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: skip_suspenders
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A comment that will be added into the run metadata. If not provided,
        no comment will be added.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: comment
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A group name label that will be added into the run metadata.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group_name
    - annotation:
        type: list
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: plot_detectors
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'The exposure time in seconds for all detectors, by default None.

        If None, do not set any exposure time, and assume that detectors are already
        set'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: dwell
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The sample id. If given, the selected sample metadata is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample
    - annotation:
        type: typing.Optional[dict]
      default: '{}'
      description: 'A dictionary of positions relative to the sample center. Parameters
        not given will be assumed to

        be the default for the sampleholder (typically moving the sample into the
        beam at a typical angle)'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample_position
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The energy reference sample. If given, the selected reference sample
        is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: eref_sample
    - annotation:
        type: typing.Optional[float]
      default: None
      description: If not None, will set the beamline energy prior to the plan start.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: energy
    - annotation:
        type: typing.Optional[float]
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: polarization
    - annotation:
        type: int
      default: '1'
      description: The number of times to repeat the entire scan
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: repeat
    - default: 'True'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: open_shutter
    - default: '[]'
      description: A list of extra detectors to be activated for the scan, by default
        [].
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: extra_dets
    - annotation:
        type: float
      default: '0'
      description: A value to shift all start/stop positions by
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: shift
    - annotation:
        type: typing.Optional[dict]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  bias_scan:
    module: haxpes.plans.scans
    name: bias_scan
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: start_bias
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: stop_bias
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: n_steps
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: exposure_time
    - default: '0.5'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: settle_time
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  broadcast_msg:
    description: Generate many copies of a message, applying it to a list of devices.
    module: bluesky.plan_stubs
    name: broadcast_msg
    parameters:
    - annotation:
        type: str
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: command
    - annotation:
        type: collections.abc.Iterable[typing.Any]
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: objs
    - kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: false
  bsleep:
    description: Tell the RunEngine to sleep, while asynchronously doing other processing.
    module: bluesky.plan_stubs
    name: sleep
    parameters:
    - annotation:
        type: float
      description: seconds
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: time
    properties:
      is_generator: false
  caching_repeater:
    description: Generate n chained copies of the messages in a plan.
    module: bluesky.plan_stubs
    name: caching_repeater
    parameters:
    - annotation:
        type: typing.Optional[int]
      description: total number of repetitions; if None, infinite
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: n
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: plan
    properties:
      is_generator: false
  checkpoint:
    description: If interrupted, rewind to this point.
    module: bluesky.plan_stubs
    name: checkpoint
    parameters: []
    properties:
      is_generator: false
  clear_all_rois:
    module: nbs_bl.plans.plan_stubs
    name: clear_all_rois
    parameters: []
    properties:
      is_generator: true
  clear_checkpoint:
    description: Designate that it is not safe to resume. If interrupted or paused,
      abort.
    module: bluesky.plan_stubs
    name: clear_checkpoint
    parameters: []
    properties:
      is_generator: false
  clear_one_roi:
    module: nbs_bl.plans.plan_stubs
    name: clear_one_roi
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: label
    properties:
      is_generator: true
  close_run:
    description: Mark the end of the current 'run'. Emit a RunStop document.
    module: bluesky.plan_stubs
    name: close_run
    parameters:
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The exit status to report in the Stop document
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: exit_status
    - annotation:
        type: typing.Optional[str]
      default: None
      description: Long-form description of why the run ended
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: reason
    properties:
      is_generator: false
  close_shutter:
    module: haxpes.plans.bl_op_plans
    name: close_shutter
    parameters:
    - annotation:
        type: str
      default: '''default'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: shutter
    properties:
      is_generator: true
  collect:
    description: Collect data cached by one or more fly-scanning devices and emit
      documents.
    module: bluesky.plan_stubs
    name: collect
    parameters:
    - annotation:
        type: __FLYABLE__
      convert_device_names: true
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: obj
    - kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - annotation:
        type: bool
      default: 'False'
      description: 'If False (default), emit Event documents in one bulk dump. If
        True,

        emit events one at time.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: stream
    - annotation:
        type: bool
      default: 'True'
      description: 'If True (default), return the collected Events. If False, return
        None.

        Using ``stream=True`` and ``return_payload=False`` together avoids

        accumulating the documents in memory: they are emitted as they are

        collected, and they are not accumulated.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: return_payload
    - annotation:
        type: typing.Optional[str]
      default: None
      description: 'If not None, will collect for the named string specifically, else
        collect will be performed

        on all streams.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: name
    properties:
      is_generator: false
  collect_while_completing:
    description: 'Collect data from one or more fly-scanning devices and emit documents,
      then collect and emit

      data from one or more Collectable detectors until all are done.'
    module: bluesky.plan_stubs
    name: collect_while_completing
    parameters:
    - description: '''collect'' methods.'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: flyers
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: dets
    - default: None
      description: 'Time period in seconds between each yield from collect while waiting
        for triggered

        objects to be done'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: flush_period
    - default: None
      description: 'If not None, will collect for the named string specifically, else
        collect will be performed

        on all streams.'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: stream_name
    properties:
      is_generator: false
  complete:
    description: Tell a flyable, 'stop collecting, whenever you are ready'.
    module: bluesky.plan_stubs
    name: complete
    parameters:
    - annotation:
        type: __FLYABLE__
      convert_device_names: true
      description: Device with 'kickoff' and 'complete' methods.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: obj
    - annotation:
        type: typing.Optional[collections.abc.Hashable]
      default: None
      description: identifier used by 'wait'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group
    - annotation:
        type: bool
      default: 'False'
      description: 'If True, wait for completion before processing any more messages.

        False by default.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: wait
    - description: passed through to ``obj.complete()``
      kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: false
  complete_all:
    description: Tell one or more flyable objects, 'stop collecting, whenever you
      are ready'.
    module: bluesky.plan_stubs
    name: complete_all
    parameters:
    - description: Device with 'kickoff' and 'complete' methods.
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - annotation:
        type: typing.Optional[collections.abc.Hashable]
      default: None
      description: identifier used by 'wait'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group
    - annotation:
        type: bool
      default: 'False'
      description: 'If True, wait for completion before processing any more messages.

        False by default.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: wait
    - description: passed through to 'complete' for each device
      kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: false
  configure:
    description: Change Device configuration and emit an updated Event Descriptor
      document.
    module: bluesky.plan_stubs
    name: configure
    parameters:
    - annotation:
        type: __DEVICE__
      convert_device_names: true
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: obj
    - description: passed through to ``obj.configure()``
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - description: passed through to ``obj.configure()``
      kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: false
  count:
    description: Take one or more readings from detectors.
    module: bluesky.plans
    name: count
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      description: list of 'readable' objects
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - annotation:
        type: typing.Optional[int]
      default: '1'
      description: 'number of readings to take; default is 1


        If None, capture data until canceled'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: num
    - annotation:
        type: typing.Union[float, collections.abc.Iterable[float]]
      default: '0.0'
      description: Time delay in seconds between successive readings; default is 0.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: delay
    - default: None
      description: "hook for customizing action of inner loop (messages per step)\n\
        Expected signature ::\n\n   def f(detectors: Iterable[OphydObj]) -> Generator[Msg]:\n\
        \       ..."
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_shot
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  create:
    description: Bundle future readings into a new Event document.
    module: bluesky.plan_stubs
    name: create
    parameters:
    - annotation:
        type: str
      default: '''primary'''
      description: 'name given to event stream, used for convenient identification

        default is ''primary'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: name
    properties:
      is_generator: false
  declare_stream:
    description: Bundle future readings into a new Event document.
    module: bluesky.plan_stubs
    name: declare_stream
    parameters:
    - annotation:
        type: __READABLE__
      convert_device_names: true
      description: objects whose readings will be present in the stream
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: objs
    - annotation:
        type: str
      description: 'name given to event stream, used for convenient identification

        default is ''primary'''
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: name
    - annotation:
        type: bool
      default: 'False'
      description: 'collect as well as describe when declaring the stream

        default is `False`'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: collect
    properties:
      is_generator: false
  deferred_pause:
    description: Pause at the next checkpoint.
    module: bluesky.plan_stubs
    name: deferred_pause
    parameters: []
    properties:
      is_generator: false
  drop:
    description: Drop a bundle of readings without emitting a completed Event document.
    module: bluesky.plan_stubs
    name: drop
    parameters: []
    properties:
      is_generator: false
  find_centerofmass:
    module: haxpes.optimizers_test
    name: find_centerofmass
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: plan
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: dets
    - kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: max_channel
    - default: 'False'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: hysteresis_correct
    - default: 'False'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: hexapod
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  find_max:
    description: invert turns find_max into find_min
    module: haxpes.optimizers_test
    name: find_max
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: plan
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: dets
    - kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: max_channel
    - default: 'False'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: invert
    - default: 'False'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: hysteresis_correct
    - default: 'False'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: hexapod
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  fine_align_beam:
    module: haxpes.tender.tender_ops
    name: fine_align_beam
    parameters: []
    properties:
      is_generator: true
  fly:
    description: Perform a fly scan with one or more 'flyers'.
    module: bluesky.plans
    name: fly
    parameters:
    - annotation:
        type: list[__FLYABLE__]
      convert_device_names: true
      description: objects that support the flyer interface
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: flyers
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  grid_scan:
    description: Scan over a mesh; each motor is on an independent trajectory.
    module: bluesky.plans
    name: grid_scan
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      description: list of 'readable' objects
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - annotation:
        type: typing.Union[collections.abc.Iterable, bool, NoneType]
      default: None
      description: 'which axes should be snaked, either ``False`` (do not snake any
        axes),

        ``True`` (snake all axes) or a list of axes to snake. "Snaking" an axis

        is defined as following snake-like, winding trajectory instead of a

        simple left-to-right trajectory. The elements of the list are motors

        that are listed in `args`. The list must not contain the slowest

        (first) motor, since it can''t be snaked.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: snake_axes
    - default: None
      description: 'hook for customizing action of inner loop (messages per step).

        See docstring of :func:`bluesky.plan_stubs.one_nd_step` (the default)

        for details.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  inner_product_scan:
    module: bluesky.plans
    name: inner_product_scan
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - annotation:
        type: int
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: num
    - annotation:
        type: typing.Union[__MOVABLE__, typing.Any]
      convert_device_names: true
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  input_plan:
    description: Prompt the user for text input.
    module: bluesky.plan_stubs
    name: input_plan
    parameters:
    - annotation:
        type: str
      default: ''''''
      description: prompt string, e.g., 'enter user name' or 'enter next position'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: prompt
    properties:
      is_generator: false
  insert_filter:
    module: haxpes.plans.bl_op_plans
    name: insert_filter
    parameters: []
    properties:
      is_generator: true
  install_suspender:
    description: Install a suspender during a plan.
    module: bluesky.plan_stubs
    name: install_suspender
    parameters:
    - description: The suspender to install
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: suspender
    properties:
      is_generator: false
  kickoff:
    description: Kickoff one fly-scanning device.
    module: bluesky.plan_stubs
    name: kickoff
    parameters:
    - annotation:
        type: __FLYABLE__
      convert_device_names: true
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: obj
    - annotation:
        type: typing.Optional[collections.abc.Hashable]
      default: None
      description: identifier used by 'wait'.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group
    - annotation:
        type: bool
      default: 'False'
      description: 'If True, wait for completion before processing any more messages.

        False by default.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: wait
    - description: passed through to ``obj.kickoff()``
      kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: false
  kickoff_all:
    description: Kickoff one or more fly-scanning devices.
    module: bluesky.plan_stubs
    name: kickoff_all
    parameters:
    - description: Device with 'kickoff', and 'complete' methods.
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - annotation:
        type: typing.Optional[collections.abc.Hashable]
      default: None
      description: identifier used by 'wait'.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group
    - annotation:
        type: bool
      default: 'True'
      description: 'If True, wait for completion before processing any more messages.

        True by default.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: wait
    - description: passed through to 'kickoff' for each device
      kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: false
  list_grid_scan:
    description: Scan over a mesh; each motor is on an independent trajectory.
    module: bluesky.plans
    name: list_grid_scan
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      description: list of 'readable' objects
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - annotation:
        type: typing.Union[__MOVABLE__, typing.Any]
      convert_device_names: true
      description: "patterned like (``motor1, position_list1,``\n                ``motor2,\
        \ position_list2,``\n                ``motor3, position_list3,``\n       \
        \         ``...,``\n                ``motorN, position_listN``)\n\nThe first\
        \ motor is the \"slowest\", the outer loop. ``position_list``'s\nare lists\
        \ of positions, all lists must have the same length. Motors\ncan be any 'settable'\
        \ object (motor, temp controller, etc.)."
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - annotation:
        type: bool
      default: 'False'
      description: 'which axes should be snaked, either ``False`` (do not snake any
        axes),

        ``True`` (snake all axes) or a list of axes to snake. "Snaking" an axis

        is defined as following snake-like, winding trajectory instead of a

        simple left-to-right trajectory.The elements of the list are motors

        that are listed in `args`. The list must not contain the slowest

        (first) motor, since it can''t be snaked.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: snake_axes
    - default: None
      description: 'hook for customizing action of inner loop (messages per step).

        See docstring of :func:`bluesky.plan_stubs.one_nd_step` (the default)

        for details.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  list_scan:
    description: Scan over one or more variables in steps simultaneously (inner product).
    module: bluesky.plans
    name: list_scan
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      description: list of 'readable' objects
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - annotation:
        type: tuple[typing.Union[__MOVABLE__, typing.Any], list[typing.Any]]
      convert_device_names: true
      description: "For one dimension, ``motor, [point1, point2, ....]``.\nIn general:\n\
        \n.. code-block:: python\n\n    motor1, [point1, point2, ...],\n    motor2,\
        \ [point1, point2, ...],\n    ...,\n    motorN, [point1, point2, ...]\n\n\
        Motors can be any 'settable' object (motor, temp controller, etc.)"
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - default: None
      description: 'hook for customizing action of inner loop (messages per step)

        Expected signature:

        ``f(detectors, motor, step) -> plan (a generator)``'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  locate:
    description: Locate some Movables and return their locations.
    module: bluesky.plan_stubs
    name: locate
    parameters:
    - kind:
        name: VAR_POSITIONAL
        value: 2
      name: objs
    - default: 'True'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: squeeze
    properties:
      is_generator: false
  log_scan:
    description: Scan over one variable in log-spaced steps.
    module: bluesky.plans
    name: log_scan
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      description: list of 'readable' objects
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: motor
    - annotation:
        type: float
      description: starting position of motor
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: start
    - annotation:
        type: float
      description: ending position of motor
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: stop
    - annotation:
        type: int
      description: number of steps
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: num
    - default: None
      description: 'hook for customizing action of inner loop (messages per step)

        Expected signature: ``f(detectors, motor, step)``'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  measure_offsets:
    description: take dark counts and set detector offsets
    module: haxpes.plans.bl_op_plans
    name: measure_offsets
    parameters:
    - annotation:
        type: str
      default: '''default'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: shutter
    - annotation:
        type: int
      default: '10'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: n_counts
    properties:
      is_generator: true
  monitor:
    description: Asynchronously monitor for new values and emit Event documents.
    module: bluesky.plan_stubs
    name: monitor
    parameters:
    - annotation:
        type: __READABLE__
      convert_device_names: true
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: obj
    - annotation:
        type: typing.Optional[str]
      default: None
      description: name of event stream; default is None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: name
    - description: passed through to ``obj.subscribe()``
      kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: false
  mov:
    description: Move one or more devices to a setpoint. Wait for all to complete.
    module: bluesky.plan_stubs
    name: mv
    parameters:
    - annotation:
        type: typing.Union[__MOVABLE__, typing.Any]
      convert_device_names: true
      description: device1, value1, device2, value2, ...
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - annotation:
        type: typing.Optional[collections.abc.Hashable]
      default: None
      description: Used to mark these as a unit to be waited on.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group
    - description: passed to obj.set()
      kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: false
  move_per_step:
    description: Inner loop of an N-dimensional step scan without any readings
    module: bluesky.plan_stubs
    name: move_per_step
    parameters:
    - annotation:
        type: collections.abc.Mapping[__MOVABLE__, typing.Any]
      convert_device_names: true
      description: mapping motors to positions in this step
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: step
    - annotation:
        type: dict[__MOVABLE__, typing.Any]
      convert_device_names: true
      description: mapping motors to their last-set positions
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: pos_cache
    properties:
      is_generator: false
  move_sample:
    description: Move to a sample position and set it as the current sample.
    module: nbs_bl.samples
    name: move_sample
    parameters:
    - description: Identifier of the sample to move to
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: sample_id
    - description: Additional offset position parameters (x, y, r, etc.)
      kind:
        name: VAR_KEYWORD
        value: 4
      name: position
    properties:
      is_generator: true
  movr:
    description: Move one or more devices to a relative setpoint. Wait for all to
      complete.
    module: bluesky.plan_stubs
    name: mvr
    parameters:
    - annotation:
        type: typing.Union[__MOVABLE__, typing.Any]
      convert_device_names: true
      description: device1, value1, device2, value2, ...
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - annotation:
        type: typing.Optional[collections.abc.Hashable]
      default: None
      description: Used to mark these as a unit to be waited on.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group
    - description: passed to obj.set()
      kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: false
  mv:
    module: __main__
    name: mv
    parameters:
    - kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  mvr:
    module: __main__
    name: mvr
    parameters:
    - kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  nbs_count:
    description: Wraps count with additional arguments and default detectors.
    module: nbs_bl.plans.preprocessors
    name: nbs_count
    parameters:
    - annotation:
        type: typing.Optional[int]
      default: '1'
      description: 'number of readings to take; default is 1


        If None, capture data until canceled'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: num
    - annotation:
        type: typing.Union[float, collections.abc.Iterable[float]]
      default: '0.0'
      description: Time delay in seconds between successive readings; default is 0.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: delay
    - default: None
      description: "hook for customizing action of inner loop (messages per step)\n\
        Expected signature ::\n\n   def f(detectors: Iterable[OphydObj]) -> Generator[Msg]:\n\
        \       ..."
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_shot
    - default: 'False'
      description: If True, do not install suspenders
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: skip_suspenders
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A comment that will be added into the run metadata. If not provided,
        no comment will be added.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: comment
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A group name label that will be added into the run metadata.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group_name
    - annotation:
        type: list
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: plot_detectors
    - default: '[]'
      description: A list of extra detectors to be activated for the scan, by default
        [].
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: extra_dets
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'The exposure time in seconds for all detectors, by default None.

        If None, do not set any exposure time, and assume that detectors are already
        set'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: dwell
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The sample id. If given, the selected sample metadata is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample
    - annotation:
        type: typing.Optional[dict]
      default: '{}'
      description: 'A dictionary of positions relative to the sample center. Parameters
        not given will be assumed to

        be the default for the sampleholder (typically moving the sample into the
        beam at a typical angle)'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample_position
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The energy reference sample. If given, the selected reference sample
        is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: eref_sample
    - annotation:
        type: typing.Optional[float]
      default: None
      description: If not None, will set the beamline energy prior to the plan start.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: energy
    - annotation:
        type: typing.Optional[float]
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: polarization
    - annotation:
        type: int
      default: '1'
      description: The number of times to repeat the entire scan
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: repeat
    - default: 'True'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: open_shutter
    - annotation:
        type: typing.Optional[dict]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  nbs_energy_scan:
    description: A variable step scan of the energy and the default detectors.
    module: nbs_bl.plans.scans
    name: nbs_energy_scan
    parameters:
    - description: Starting position for the scan
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: start
    - description: First stopping position
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: stop
    - description: Step size for first region
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: step
    - description: "For one dimension, ``motor, [point1, point2, ....]``.\nIn general:\n\
        \n.. code-block:: python\n\n    motor1, [point1, point2, ...],\n    motor2,\
        \ [point1, point2, ...],\n    ...,\n    motorN, [point1, point2, ...]\n\n\
        Motors can be any 'settable' object (motor, temp controller, etc.)"
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - default: None
      description: 'hook for customizing action of inner loop (messages per step)

        Expected signature:

        ``f(detectors, motor, step) -> plan (a generator)``'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - default: 'False'
      description: If True, do not install suspenders
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: skip_suspenders
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A comment that will be added into the run metadata. If not provided,
        no comment will be added.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: comment
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A group name label that will be added into the run metadata.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group_name
    - annotation:
        type: list
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: plot_detectors
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'The exposure time in seconds for all detectors, by default None.

        If None, do not set any exposure time, and assume that detectors are already
        set'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: dwell
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The sample id. If given, the selected sample metadata is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample
    - annotation:
        type: typing.Optional[dict]
      default: '{}'
      description: 'A dictionary of positions relative to the sample center. Parameters
        not given will be assumed to

        be the default for the sampleholder (typically moving the sample into the
        beam at a typical angle)'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample_position
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The energy reference sample. If given, the selected reference sample
        is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: eref_sample
    - annotation:
        type: typing.Optional[float]
      default: None
      description: If not None, will set the beamline energy prior to the plan start.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: energy
    - annotation:
        type: typing.Optional[float]
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: polarization
    - annotation:
        type: int
      default: '1'
      description: The number of times to repeat the entire scan
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: repeat
    - default: 'True'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: open_shutter
    - annotation:
        type: typing.Optional[dict]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    - default: '[]'
      description: A list of extra detectors to be activated for the scan, by default
        [].
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: extra_dets
    - annotation:
        type: float
      default: '0'
      description: A value to shift all start/stop positions by
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: shift
    properties:
      is_generator: true
  nbs_fly_scan:
    description: Wraps fly_scan with additional arguments and default detectors.
    module: nbs_bl.plans.preprocessors
    name: nbs_fly_scan
    parameters:
    - description: Motor to be scanned
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: motor
    - description: Starting position of the scan
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: start
    - description: Ending position of the scan
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: stop
    - description: 'Additional scan parameters in groups of 3: start, stop, speed.

        For example:

        start1, stop1, speed1[, start2, stop2, speed2, ...]

        This allows for multiple trajectory segments in a single scan'
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - annotation:
        type: typing.Optional[float]
      default: None
      description: Time period between data points. If None, uses detector's default
        period
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: period
    - annotation:
        type: bool
      default: 'True'
      description: 'If True, continuously stream data from detectors during the scan.

        If False, collect data only at specified points. Default is True'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: stream
    - default: 'False'
      description: If True, do not install suspenders
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: skip_suspenders
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A comment that will be added into the run metadata. If not provided,
        no comment will be added.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: comment
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A group name label that will be added into the run metadata.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group_name
    - annotation:
        type: list
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: plot_detectors
    - default: '[]'
      description: A list of extra detectors to be activated for the scan, by default
        [].
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: extra_dets
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'The exposure time in seconds for all detectors, by default None.

        If None, do not set any exposure time, and assume that detectors are already
        set'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: dwell
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The sample id. If given, the selected sample metadata is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample
    - annotation:
        type: typing.Optional[dict]
      default: '{}'
      description: 'A dictionary of positions relative to the sample center. Parameters
        not given will be assumed to

        be the default for the sampleholder (typically moving the sample into the
        beam at a typical angle)'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample_position
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The energy reference sample. If given, the selected reference sample
        is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: eref_sample
    - annotation:
        type: typing.Optional[float]
      default: None
      description: If not None, will set the beamline energy prior to the plan start.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: energy
    - annotation:
        type: typing.Optional[float]
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: polarization
    - annotation:
        type: int
      default: '1'
      description: The number of times to repeat the entire scan
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: repeat
    - default: 'True'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: open_shutter
    - annotation:
        type: typing.Optional[dict]
      default: None
      description: Metadata dictionary to be included with the scan
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  nbs_grid_scan:
    description: Wraps grid_scan with additional arguments and default detectors.
    module: nbs_bl.plans.preprocessors
    name: nbs_grid_scan
    parameters:
    - kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - annotation:
        type: typing.Union[collections.abc.Iterable, bool, NoneType]
      default: None
      description: 'which axes should be snaked, either ``False`` (do not snake any
        axes),

        ``True`` (snake all axes) or a list of axes to snake. "Snaking" an axis

        is defined as following snake-like, winding trajectory instead of a

        simple left-to-right trajectory. The elements of the list are motors

        that are listed in `args`. The list must not contain the slowest

        (first) motor, since it can''t be snaked.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: snake_axes
    - default: None
      description: 'hook for customizing action of inner loop (messages per step).

        See docstring of :func:`bluesky.plan_stubs.one_nd_step` (the default)

        for details.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - default: 'False'
      description: If True, do not install suspenders
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: skip_suspenders
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A comment that will be added into the run metadata. If not provided,
        no comment will be added.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: comment
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A group name label that will be added into the run metadata.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group_name
    - annotation:
        type: list
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: plot_detectors
    - default: '[]'
      description: A list of extra detectors to be activated for the scan, by default
        [].
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: extra_dets
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'The exposure time in seconds for all detectors, by default None.

        If None, do not set any exposure time, and assume that detectors are already
        set'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: dwell
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The sample id. If given, the selected sample metadata is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample
    - annotation:
        type: typing.Optional[dict]
      default: '{}'
      description: 'A dictionary of positions relative to the sample center. Parameters
        not given will be assumed to

        be the default for the sampleholder (typically moving the sample into the
        beam at a typical angle)'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample_position
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The energy reference sample. If given, the selected reference sample
        is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: eref_sample
    - annotation:
        type: typing.Optional[float]
      default: None
      description: If not None, will set the beamline energy prior to the plan start.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: energy
    - annotation:
        type: typing.Optional[float]
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: polarization
    - annotation:
        type: int
      default: '1'
      description: The number of times to repeat the entire scan
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: repeat
    - default: 'True'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: open_shutter
    - annotation:
        type: typing.Optional[dict]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  nbs_gscan:
    description: A variable step scan of a motor and the default detectors.
    module: nbs_bl.plans.scans
    name: nbs_gscan
    parameters:
    - description: The motor object to scan
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: motor
    - description: Starting position for the scan
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: start
    - description: First stopping position
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: stop
    - description: Step size for first region
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: step
    - description: "For one dimension, ``motor, [point1, point2, ....]``.\nIn general:\n\
        \n.. code-block:: python\n\n    motor1, [point1, point2, ...],\n    motor2,\
        \ [point1, point2, ...],\n    ...,\n    motorN, [point1, point2, ...]\n\n\
        Motors can be any 'settable' object (motor, temp controller, etc.)"
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - default: None
      description: 'hook for customizing action of inner loop (messages per step)

        Expected signature:

        ``f(detectors, motor, step) -> plan (a generator)``'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - default: 'False'
      description: If True, do not install suspenders
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: skip_suspenders
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A comment that will be added into the run metadata. If not provided,
        no comment will be added.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: comment
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A group name label that will be added into the run metadata.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group_name
    - annotation:
        type: list
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: plot_detectors
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'The exposure time in seconds for all detectors, by default None.

        If None, do not set any exposure time, and assume that detectors are already
        set'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: dwell
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The sample id. If given, the selected sample metadata is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample
    - annotation:
        type: typing.Optional[dict]
      default: '{}'
      description: 'A dictionary of positions relative to the sample center. Parameters
        not given will be assumed to

        be the default for the sampleholder (typically moving the sample into the
        beam at a typical angle)'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample_position
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The energy reference sample. If given, the selected reference sample
        is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: eref_sample
    - annotation:
        type: typing.Optional[float]
      default: None
      description: If not None, will set the beamline energy prior to the plan start.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: energy
    - annotation:
        type: typing.Optional[float]
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: polarization
    - annotation:
        type: int
      default: '1'
      description: The number of times to repeat the entire scan
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: repeat
    - default: 'True'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: open_shutter
    - annotation:
        type: typing.Optional[dict]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    - default: '[]'
      description: A list of extra detectors to be activated for the scan, by default
        [].
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: extra_dets
    - annotation:
        type: float
      default: '0'
      description: A value to shift all start/stop positions by
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: shift
    properties:
      is_generator: true
  nbs_list_grid_scan:
    description: Wraps list_grid_scan with additional arguments and default detectors.
    module: nbs_bl.plans.preprocessors
    name: nbs_list_grid_scan
    parameters:
    - annotation:
        type: typing.Union[__MOVABLE__, typing.Any]
      convert_device_names: true
      description: "patterned like (``motor1, position_list1,``\n                ``motor2,\
        \ position_list2,``\n                ``motor3, position_list3,``\n       \
        \         ``...,``\n                ``motorN, position_listN``)\n\nThe first\
        \ motor is the \"slowest\", the outer loop. ``position_list``'s\nare lists\
        \ of positions, all lists must have the same length. Motors\ncan be any 'settable'\
        \ object (motor, temp controller, etc.)."
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - annotation:
        type: bool
      default: 'False'
      description: 'which axes should be snaked, either ``False`` (do not snake any
        axes),

        ``True`` (snake all axes) or a list of axes to snake. "Snaking" an axis

        is defined as following snake-like, winding trajectory instead of a

        simple left-to-right trajectory.The elements of the list are motors

        that are listed in `args`. The list must not contain the slowest

        (first) motor, since it can''t be snaked.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: snake_axes
    - default: None
      description: 'hook for customizing action of inner loop (messages per step).

        See docstring of :func:`bluesky.plan_stubs.one_nd_step` (the default)

        for details.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - default: 'False'
      description: If True, do not install suspenders
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: skip_suspenders
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A comment that will be added into the run metadata. If not provided,
        no comment will be added.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: comment
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A group name label that will be added into the run metadata.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group_name
    - annotation:
        type: list
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: plot_detectors
    - default: '[]'
      description: A list of extra detectors to be activated for the scan, by default
        [].
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: extra_dets
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'The exposure time in seconds for all detectors, by default None.

        If None, do not set any exposure time, and assume that detectors are already
        set'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: dwell
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The sample id. If given, the selected sample metadata is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample
    - annotation:
        type: typing.Optional[dict]
      default: '{}'
      description: 'A dictionary of positions relative to the sample center. Parameters
        not given will be assumed to

        be the default for the sampleholder (typically moving the sample into the
        beam at a typical angle)'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample_position
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The energy reference sample. If given, the selected reference sample
        is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: eref_sample
    - annotation:
        type: typing.Optional[float]
      default: None
      description: If not None, will set the beamline energy prior to the plan start.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: energy
    - annotation:
        type: typing.Optional[float]
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: polarization
    - annotation:
        type: int
      default: '1'
      description: The number of times to repeat the entire scan
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: repeat
    - default: 'True'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: open_shutter
    - annotation:
        type: typing.Optional[dict]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  nbs_list_scan:
    description: Wraps list_scan with additional arguments and default detectors.
    module: nbs_bl.plans.preprocessors
    name: nbs_list_scan
    parameters:
    - annotation:
        type: tuple[typing.Union[__MOVABLE__, typing.Any], list[typing.Any]]
      convert_device_names: true
      description: "For one dimension, ``motor, [point1, point2, ....]``.\nIn general:\n\
        \n.. code-block:: python\n\n    motor1, [point1, point2, ...],\n    motor2,\
        \ [point1, point2, ...],\n    ...,\n    motorN, [point1, point2, ...]\n\n\
        Motors can be any 'settable' object (motor, temp controller, etc.)"
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - default: None
      description: 'hook for customizing action of inner loop (messages per step)

        Expected signature:

        ``f(detectors, motor, step) -> plan (a generator)``'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - default: 'False'
      description: If True, do not install suspenders
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: skip_suspenders
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A comment that will be added into the run metadata. If not provided,
        no comment will be added.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: comment
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A group name label that will be added into the run metadata.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group_name
    - annotation:
        type: list
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: plot_detectors
    - default: '[]'
      description: A list of extra detectors to be activated for the scan, by default
        [].
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: extra_dets
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'The exposure time in seconds for all detectors, by default None.

        If None, do not set any exposure time, and assume that detectors are already
        set'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: dwell
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The sample id. If given, the selected sample metadata is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample
    - annotation:
        type: typing.Optional[dict]
      default: '{}'
      description: 'A dictionary of positions relative to the sample center. Parameters
        not given will be assumed to

        be the default for the sampleholder (typically moving the sample into the
        beam at a typical angle)'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample_position
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The energy reference sample. If given, the selected reference sample
        is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: eref_sample
    - annotation:
        type: typing.Optional[float]
      default: None
      description: If not None, will set the beamline energy prior to the plan start.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: energy
    - annotation:
        type: typing.Optional[float]
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: polarization
    - annotation:
        type: int
      default: '1'
      description: The number of times to repeat the entire scan
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: repeat
    - default: 'True'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: open_shutter
    - annotation:
        type: typing.Optional[dict]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  nbs_log_scan:
    description: Wraps log_scan with additional arguments and default detectors.
    module: nbs_bl.plans.preprocessors
    name: nbs_log_scan
    parameters:
    - description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: motor
    - annotation:
        type: float
      description: starting position of motor
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: start
    - annotation:
        type: float
      description: ending position of motor
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: stop
    - annotation:
        type: int
      description: number of steps
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: num
    - default: None
      description: 'hook for customizing action of inner loop (messages per step)

        Expected signature: ``f(detectors, motor, step)``'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - default: 'False'
      description: If True, do not install suspenders
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: skip_suspenders
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A comment that will be added into the run metadata. If not provided,
        no comment will be added.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: comment
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A group name label that will be added into the run metadata.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group_name
    - annotation:
        type: list
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: plot_detectors
    - default: '[]'
      description: A list of extra detectors to be activated for the scan, by default
        [].
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: extra_dets
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'The exposure time in seconds for all detectors, by default None.

        If None, do not set any exposure time, and assume that detectors are already
        set'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: dwell
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The sample id. If given, the selected sample metadata is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample
    - annotation:
        type: typing.Optional[dict]
      default: '{}'
      description: 'A dictionary of positions relative to the sample center. Parameters
        not given will be assumed to

        be the default for the sampleholder (typically moving the sample into the
        beam at a typical angle)'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample_position
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The energy reference sample. If given, the selected reference sample
        is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: eref_sample
    - annotation:
        type: typing.Optional[float]
      default: None
      description: If not None, will set the beamline energy prior to the plan start.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: energy
    - annotation:
        type: typing.Optional[float]
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: polarization
    - annotation:
        type: int
      default: '1'
      description: The number of times to repeat the entire scan
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: repeat
    - default: 'True'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: open_shutter
    - annotation:
        type: typing.Optional[dict]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  nbs_rel_grid_scan:
    description: Wraps rel_grid_scan with additional arguments and default detectors.
    module: nbs_bl.plans.preprocessors
    name: nbs_rel_grid_scan
    parameters:
    - annotation:
        type: typing.Union[__MOVABLE__, typing.Any]
      convert_device_names: true
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - annotation:
        type: typing.Union[collections.abc.Iterable, bool, NoneType]
      default: None
      description: 'which axes should be snaked, either ``False`` (do not snake any
        axes),

        ``True`` (snake all axes) or a list of axes to snake. "Snaking" an axis

        is defined as following snake-like, winding trajectory instead of a

        simple left-to-right trajectory. The elements of the list are motors

        that are listed in `args`. The list must not contain the slowest

        (first) motor, since it can''t be snaked.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: snake_axes
    - default: None
      description: 'hook for customizing action of inner loop (messages per step).

        See docstring of :func:`bluesky.plan_stubs.one_nd_step` (the default)

        for details.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - default: 'False'
      description: If True, do not install suspenders
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: skip_suspenders
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A comment that will be added into the run metadata. If not provided,
        no comment will be added.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: comment
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A group name label that will be added into the run metadata.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group_name
    - annotation:
        type: list
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: plot_detectors
    - default: '[]'
      description: A list of extra detectors to be activated for the scan, by default
        [].
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: extra_dets
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'The exposure time in seconds for all detectors, by default None.

        If None, do not set any exposure time, and assume that detectors are already
        set'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: dwell
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The sample id. If given, the selected sample metadata is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample
    - annotation:
        type: typing.Optional[dict]
      default: '{}'
      description: 'A dictionary of positions relative to the sample center. Parameters
        not given will be assumed to

        be the default for the sampleholder (typically moving the sample into the
        beam at a typical angle)'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample_position
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The energy reference sample. If given, the selected reference sample
        is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: eref_sample
    - annotation:
        type: typing.Optional[float]
      default: None
      description: If not None, will set the beamline energy prior to the plan start.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: energy
    - annotation:
        type: typing.Optional[float]
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: polarization
    - annotation:
        type: int
      default: '1'
      description: The number of times to repeat the entire scan
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: repeat
    - default: 'True'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: open_shutter
    - annotation:
        type: typing.Optional[dict]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  nbs_rel_list_grid_scan:
    description: Wraps rel_list_grid_scan with additional arguments and default detectors.
    module: nbs_bl.plans.preprocessors
    name: nbs_rel_list_grid_scan
    parameters:
    - annotation:
        type: typing.Union[__MOVABLE__, typing.Any]
      convert_device_names: true
      description: "patterned like (``motor1, position_list1,``\n                ``motor2,\
        \ position_list2,``\n                ``motor3, position_list3,``\n       \
        \         ``...,``\n                ``motorN, position_listN``)\n\nThe first\
        \ motor is the \"slowest\", the outer loop. ``position_list``'s\nare lists\
        \ of positions, all lists must have the same length. Motors\ncan be any 'settable'\
        \ object (motor, temp controller, etc.)."
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - annotation:
        type: bool
      default: 'False'
      description: 'which axes should be snaked, either ``False`` (do not snake any
        axes),

        ``True`` (snake all axes) or a list of axes to snake. "Snaking" an axis

        is defined as following snake-like, winding trajectory instead of a

        simple left-to-right trajectory.The elements of the list are motors

        that are listed in `args`. The list must not contain the slowest

        (first) motor, since it can''t be snaked.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: snake_axes
    - default: None
      description: 'hook for customizing action of inner loop (messages per step).

        See docstring of :func:`bluesky.plan_stubs.one_nd_step` (the default)

        for details.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - default: 'False'
      description: If True, do not install suspenders
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: skip_suspenders
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A comment that will be added into the run metadata. If not provided,
        no comment will be added.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: comment
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A group name label that will be added into the run metadata.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group_name
    - annotation:
        type: list
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: plot_detectors
    - default: '[]'
      description: A list of extra detectors to be activated for the scan, by default
        [].
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: extra_dets
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'The exposure time in seconds for all detectors, by default None.

        If None, do not set any exposure time, and assume that detectors are already
        set'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: dwell
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The sample id. If given, the selected sample metadata is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample
    - annotation:
        type: typing.Optional[dict]
      default: '{}'
      description: 'A dictionary of positions relative to the sample center. Parameters
        not given will be assumed to

        be the default for the sampleholder (typically moving the sample into the
        beam at a typical angle)'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample_position
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The energy reference sample. If given, the selected reference sample
        is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: eref_sample
    - annotation:
        type: typing.Optional[float]
      default: None
      description: If not None, will set the beamline energy prior to the plan start.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: energy
    - annotation:
        type: typing.Optional[float]
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: polarization
    - annotation:
        type: int
      default: '1'
      description: The number of times to repeat the entire scan
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: repeat
    - default: 'True'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: open_shutter
    - annotation:
        type: typing.Optional[dict]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  nbs_rel_list_scan:
    description: Wraps rel_list_scan with additional arguments and default detectors.
    module: nbs_bl.plans.preprocessors
    name: nbs_rel_list_scan
    parameters:
    - annotation:
        type: typing.Union[__MOVABLE__, typing.Any]
      convert_device_names: true
      description: "For one dimension, ``motor, [point1, point2, ....]``.\nIn general:\n\
        \n.. code-block:: python\n\n    motor1, [point1, point2, ...],\n    motor2,\
        \ [point1, point2, ...],\n    ...,\n    motorN, [point1, point2, ...]\n\n\
        Motors can be any 'settable' object (motor, temp controller, etc.)\npoint1,\
        \ point2 etc are relative to the current location."
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - default: None
      description: 'hook for customizing action of inner loop (messages per step)

        Expected signature: ``f(detectors, motor, step)``'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - default: 'False'
      description: If True, do not install suspenders
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: skip_suspenders
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A comment that will be added into the run metadata. If not provided,
        no comment will be added.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: comment
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A group name label that will be added into the run metadata.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group_name
    - annotation:
        type: list
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: plot_detectors
    - default: '[]'
      description: A list of extra detectors to be activated for the scan, by default
        [].
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: extra_dets
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'The exposure time in seconds for all detectors, by default None.

        If None, do not set any exposure time, and assume that detectors are already
        set'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: dwell
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The sample id. If given, the selected sample metadata is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample
    - annotation:
        type: typing.Optional[dict]
      default: '{}'
      description: 'A dictionary of positions relative to the sample center. Parameters
        not given will be assumed to

        be the default for the sampleholder (typically moving the sample into the
        beam at a typical angle)'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample_position
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The energy reference sample. If given, the selected reference sample
        is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: eref_sample
    - annotation:
        type: typing.Optional[float]
      default: None
      description: If not None, will set the beamline energy prior to the plan start.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: energy
    - annotation:
        type: typing.Optional[float]
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: polarization
    - annotation:
        type: int
      default: '1'
      description: The number of times to repeat the entire scan
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: repeat
    - default: 'True'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: open_shutter
    - annotation:
        type: typing.Optional[dict]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  nbs_rel_log_scan:
    description: Wraps rel_log_scan with additional arguments and default detectors.
    module: nbs_bl.plans.preprocessors
    name: nbs_rel_log_scan
    parameters:
    - annotation:
        type: __MOVABLE__
      convert_device_names: true
      description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: motor
    - annotation:
        type: float
      description: starting position of motor
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: start
    - annotation:
        type: float
      description: ending position of motor
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: stop
    - annotation:
        type: int
      description: number of steps
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: num
    - default: None
      description: 'hook for customizing action of inner loop (messages per step)

        Expected signature: ``f(detectors, motor, step)``'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - default: 'False'
      description: If True, do not install suspenders
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: skip_suspenders
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A comment that will be added into the run metadata. If not provided,
        no comment will be added.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: comment
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A group name label that will be added into the run metadata.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group_name
    - annotation:
        type: list
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: plot_detectors
    - default: '[]'
      description: A list of extra detectors to be activated for the scan, by default
        [].
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: extra_dets
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'The exposure time in seconds for all detectors, by default None.

        If None, do not set any exposure time, and assume that detectors are already
        set'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: dwell
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The sample id. If given, the selected sample metadata is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample
    - annotation:
        type: typing.Optional[dict]
      default: '{}'
      description: 'A dictionary of positions relative to the sample center. Parameters
        not given will be assumed to

        be the default for the sampleholder (typically moving the sample into the
        beam at a typical angle)'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample_position
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The energy reference sample. If given, the selected reference sample
        is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: eref_sample
    - annotation:
        type: typing.Optional[float]
      default: None
      description: If not None, will set the beamline energy prior to the plan start.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: energy
    - annotation:
        type: typing.Optional[float]
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: polarization
    - annotation:
        type: int
      default: '1'
      description: The number of times to repeat the entire scan
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: repeat
    - default: 'True'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: open_shutter
    - annotation:
        type: typing.Optional[dict]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  nbs_rel_scan:
    description: Wraps rel_scan with additional arguments and default detectors.
    module: nbs_bl.plans.preprocessors
    name: nbs_rel_scan
    parameters:
    - annotation:
        type: typing.Union[__MOVABLE__, typing.Any]
      convert_device_names: true
      description: "For one dimension, ``motor, start, stop``.\nIn general:\n\n..\
        \ code-block:: python\n\n    motor1, start1, stop1,\n    motor2, start2, start2,\n\
        \    ...,\n    motorN, startN, stopN,\n\nMotors can be any 'settable' object\
        \ (motor, temp controller, etc.)"
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - default: None
      description: number of points
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: num
    - default: None
      description: 'hook for customizing action of inner loop (messages per step).

        See docstring of :func:`bluesky.plan_stubs.one_nd_step` (the default)

        for details.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - default: 'False'
      description: If True, do not install suspenders
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: skip_suspenders
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A comment that will be added into the run metadata. If not provided,
        no comment will be added.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: comment
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A group name label that will be added into the run metadata.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group_name
    - annotation:
        type: list
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: plot_detectors
    - default: '[]'
      description: A list of extra detectors to be activated for the scan, by default
        [].
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: extra_dets
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'The exposure time in seconds for all detectors, by default None.

        If None, do not set any exposure time, and assume that detectors are already
        set'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: dwell
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The sample id. If given, the selected sample metadata is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample
    - annotation:
        type: typing.Optional[dict]
      default: '{}'
      description: 'A dictionary of positions relative to the sample center. Parameters
        not given will be assumed to

        be the default for the sampleholder (typically moving the sample into the
        beam at a typical angle)'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample_position
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The energy reference sample. If given, the selected reference sample
        is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: eref_sample
    - annotation:
        type: typing.Optional[float]
      default: None
      description: If not None, will set the beamline energy prior to the plan start.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: energy
    - annotation:
        type: typing.Optional[float]
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: polarization
    - annotation:
        type: int
      default: '1'
      description: The number of times to repeat the entire scan
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: repeat
    - default: 'True'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: open_shutter
    - annotation:
        type: typing.Optional[dict]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  nbs_rel_spiral:
    description: Wraps rel_spiral with additional arguments and default detectors.
    module: nbs_bl.plans.preprocessors
    name: nbs_rel_spiral
    parameters:
    - annotation:
        type: __MOVABLE__
      convert_device_names: true
      description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_motor
    - annotation:
        type: __MOVABLE__
      convert_device_names: true
      description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_motor
    - annotation:
        type: float
      description: x width of spiral
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_range
    - annotation:
        type: float
      description: y width of spiral
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_range
    - annotation:
        type: float
      description: Delta radius along the minor axis of the ellipse.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: dr
    - annotation:
        type: float
      description: Number of theta steps
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: nth
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'Delta radius along the major axis of the ellipse. If None, it

        defaults to dr.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: dr_y
    - annotation:
        type: float
      default: '0.0'
      description: Tilt angle in radians, default 0.0
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: tilt
    - default: None
      description: 'hook for customizing action of inner loop (messages per step).

        See docstring of :func:`bluesky.plan_stubs.one_nd_step` (the default)

        for details.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - default: 'False'
      description: If True, do not install suspenders
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: skip_suspenders
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A comment that will be added into the run metadata. If not provided,
        no comment will be added.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: comment
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A group name label that will be added into the run metadata.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group_name
    - annotation:
        type: list
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: plot_detectors
    - default: '[]'
      description: A list of extra detectors to be activated for the scan, by default
        [].
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: extra_dets
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'The exposure time in seconds for all detectors, by default None.

        If None, do not set any exposure time, and assume that detectors are already
        set'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: dwell
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The sample id. If given, the selected sample metadata is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample
    - annotation:
        type: typing.Optional[dict]
      default: '{}'
      description: 'A dictionary of positions relative to the sample center. Parameters
        not given will be assumed to

        be the default for the sampleholder (typically moving the sample into the
        beam at a typical angle)'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample_position
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The energy reference sample. If given, the selected reference sample
        is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: eref_sample
    - annotation:
        type: typing.Optional[float]
      default: None
      description: If not None, will set the beamline energy prior to the plan start.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: energy
    - annotation:
        type: typing.Optional[float]
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: polarization
    - annotation:
        type: int
      default: '1'
      description: The number of times to repeat the entire scan
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: repeat
    - default: 'True'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: open_shutter
    - annotation:
        type: typing.Optional[dict]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  nbs_rel_spiral_fermat:
    description: Wraps rel_spiral_fermat with additional arguments and default detectors.
    module: nbs_bl.plans.preprocessors
    name: nbs_rel_spiral_fermat
    parameters:
    - annotation:
        type: __MOVABLE__
      convert_device_names: true
      description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_motor
    - annotation:
        type: __MOVABLE__
      convert_device_names: true
      description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_motor
    - annotation:
        type: float
      description: x width of spiral
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_range
    - annotation:
        type: float
      description: y width of spiral
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_range
    - annotation:
        type: float
      description: delta radius
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: dr
    - annotation:
        type: float
      description: radius gets divided by this
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: factor
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'Delta radius along the major axis of the ellipse, if not specifed

        defaults to dr'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: dr_y
    - annotation:
        type: typing.Optional[float]
      default: '0.0'
      description: Tilt angle in radians, default 0.0
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: tilt
    - default: None
      description: 'hook for customizing action of inner loop (messages per step).

        See docstring of :func:`bluesky.plan_stubs.one_nd_step` (the default)

        for details.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - default: 'False'
      description: If True, do not install suspenders
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: skip_suspenders
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A comment that will be added into the run metadata. If not provided,
        no comment will be added.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: comment
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A group name label that will be added into the run metadata.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group_name
    - annotation:
        type: list
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: plot_detectors
    - default: '[]'
      description: A list of extra detectors to be activated for the scan, by default
        [].
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: extra_dets
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'The exposure time in seconds for all detectors, by default None.

        If None, do not set any exposure time, and assume that detectors are already
        set'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: dwell
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The sample id. If given, the selected sample metadata is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample
    - annotation:
        type: typing.Optional[dict]
      default: '{}'
      description: 'A dictionary of positions relative to the sample center. Parameters
        not given will be assumed to

        be the default for the sampleholder (typically moving the sample into the
        beam at a typical angle)'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample_position
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The energy reference sample. If given, the selected reference sample
        is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: eref_sample
    - annotation:
        type: typing.Optional[float]
      default: None
      description: If not None, will set the beamline energy prior to the plan start.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: energy
    - annotation:
        type: typing.Optional[float]
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: polarization
    - annotation:
        type: int
      default: '1'
      description: The number of times to repeat the entire scan
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: repeat
    - default: 'True'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: open_shutter
    - annotation:
        type: typing.Optional[dict]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  nbs_rel_spiral_square:
    description: Wraps rel_spiral_square with additional arguments and default detectors.
    module: nbs_bl.plans.preprocessors
    name: nbs_rel_spiral_square
    parameters:
    - annotation:
        type: __MOVABLE__
      convert_device_names: true
      description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_motor
    - annotation:
        type: __MOVABLE__
      convert_device_names: true
      description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_motor
    - annotation:
        type: float
      description: x width of spiral
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_range
    - annotation:
        type: float
      description: y width of spiral
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_range
    - annotation:
        type: float
      description: number of x axis points
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_num
    - annotation:
        type: float
      description: Number of y axis points.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_num
    - default: None
      description: 'hook for cutomizing action of inner loop (messages per step).

        See docstring of :func:`bluesky.plans.one_nd_step` (the default) for

        details.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - default: 'False'
      description: If True, do not install suspenders
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: skip_suspenders
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A comment that will be added into the run metadata. If not provided,
        no comment will be added.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: comment
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A group name label that will be added into the run metadata.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group_name
    - annotation:
        type: list
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: plot_detectors
    - default: '[]'
      description: A list of extra detectors to be activated for the scan, by default
        [].
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: extra_dets
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'The exposure time in seconds for all detectors, by default None.

        If None, do not set any exposure time, and assume that detectors are already
        set'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: dwell
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The sample id. If given, the selected sample metadata is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample
    - annotation:
        type: typing.Optional[dict]
      default: '{}'
      description: 'A dictionary of positions relative to the sample center. Parameters
        not given will be assumed to

        be the default for the sampleholder (typically moving the sample into the
        beam at a typical angle)'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample_position
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The energy reference sample. If given, the selected reference sample
        is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: eref_sample
    - annotation:
        type: typing.Optional[float]
      default: None
      description: If not None, will set the beamline energy prior to the plan start.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: energy
    - annotation:
        type: typing.Optional[float]
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: polarization
    - annotation:
        type: int
      default: '1'
      description: The number of times to repeat the entire scan
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: repeat
    - default: 'True'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: open_shutter
    - annotation:
        type: typing.Optional[dict]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  nbs_scan:
    description: Wraps scan with additional arguments and default detectors.
    module: nbs_bl.plans.preprocessors
    name: nbs_scan
    parameters:
    - annotation:
        type: typing.Union[__MOVABLE__, typing.Any]
      convert_device_names: true
      description: "For one dimension, ``motor, start, stop``.\nIn general:\n\n..\
        \ code-block:: python\n\n    motor1, start1, stop1,\n    motor2, start2, stop2,\n\
        \    ...,\n    motorN, startN, stopN\n\nMotors can be any 'settable' object\
        \ (motor, temp controller, etc.)"
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - annotation:
        type: typing.Optional[int]
      default: None
      description: number of points
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: num
    - default: None
      description: 'hook for customizing action of inner loop (messages per step).

        See docstring of :func:`bluesky.plan_stubs.one_nd_step` (the default)

        for details.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - default: 'False'
      description: If True, do not install suspenders
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: skip_suspenders
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A comment that will be added into the run metadata. If not provided,
        no comment will be added.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: comment
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A group name label that will be added into the run metadata.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group_name
    - annotation:
        type: list
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: plot_detectors
    - default: '[]'
      description: A list of extra detectors to be activated for the scan, by default
        [].
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: extra_dets
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'The exposure time in seconds for all detectors, by default None.

        If None, do not set any exposure time, and assume that detectors are already
        set'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: dwell
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The sample id. If given, the selected sample metadata is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample
    - annotation:
        type: typing.Optional[dict]
      default: '{}'
      description: 'A dictionary of positions relative to the sample center. Parameters
        not given will be assumed to

        be the default for the sampleholder (typically moving the sample into the
        beam at a typical angle)'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample_position
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The energy reference sample. If given, the selected reference sample
        is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: eref_sample
    - annotation:
        type: typing.Optional[float]
      default: None
      description: If not None, will set the beamline energy prior to the plan start.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: energy
    - annotation:
        type: typing.Optional[float]
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: polarization
    - annotation:
        type: int
      default: '1'
      description: The number of times to repeat the entire scan
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: repeat
    - default: 'True'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: open_shutter
    - annotation:
        type: typing.Optional[dict]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  nbs_scan_nd:
    description: Wraps scan_nd with additional arguments and default detectors.
    module: nbs_bl.plans.preprocessors
    name: nbs_scan_nd
    parameters:
    - description: cycler.Cycler object mapping movable interfaces to positions
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: cycler
    - default: None
      description: 'hook for customizing action of inner loop (messages per step).

        See docstring of :func:`bluesky.plan_stubs.one_nd_step` (the default)

        for details.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - default: 'False'
      description: If True, do not install suspenders
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: skip_suspenders
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A comment that will be added into the run metadata. If not provided,
        no comment will be added.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: comment
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A group name label that will be added into the run metadata.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group_name
    - annotation:
        type: list
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: plot_detectors
    - default: '[]'
      description: A list of extra detectors to be activated for the scan, by default
        [].
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: extra_dets
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'The exposure time in seconds for all detectors, by default None.

        If None, do not set any exposure time, and assume that detectors are already
        set'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: dwell
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The sample id. If given, the selected sample metadata is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample
    - annotation:
        type: typing.Optional[dict]
      default: '{}'
      description: 'A dictionary of positions relative to the sample center. Parameters
        not given will be assumed to

        be the default for the sampleholder (typically moving the sample into the
        beam at a typical angle)'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample_position
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The energy reference sample. If given, the selected reference sample
        is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: eref_sample
    - annotation:
        type: typing.Optional[float]
      default: None
      description: If not None, will set the beamline energy prior to the plan start.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: energy
    - annotation:
        type: typing.Optional[float]
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: polarization
    - annotation:
        type: int
      default: '1'
      description: The number of times to repeat the entire scan
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: repeat
    - default: 'True'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: open_shutter
    - annotation:
        type: typing.Optional[dict]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  nbs_spiral:
    description: Wraps spiral with additional arguments and default detectors.
    module: nbs_bl.plans.preprocessors
    name: nbs_spiral
    parameters:
    - description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_motor
    - description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_motor
    - annotation:
        type: float
      description: x center
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_start
    - annotation:
        type: float
      description: y center
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_start
    - annotation:
        type: float
      description: x width of spiral
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_range
    - annotation:
        type: float
      description: y width of spiral
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_range
    - annotation:
        type: float
      description: Delta radius along the minor axis of the ellipse.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: dr
    - annotation:
        type: float
      description: Number of theta steps
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: nth
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'Delta radius along the major axis of the ellipse. If None, defaults
        to

        dr.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: dr_y
    - annotation:
        type: typing.Optional[float]
      default: '0.0'
      description: Tilt angle in radians, default 0.0
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: tilt
    - default: None
      description: 'hook for customizing action of inner loop (messages per step).

        See docstring of :func:`bluesky.plan_stubs.one_nd_step` (the default)

        for details.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - default: 'False'
      description: If True, do not install suspenders
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: skip_suspenders
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A comment that will be added into the run metadata. If not provided,
        no comment will be added.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: comment
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A group name label that will be added into the run metadata.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group_name
    - annotation:
        type: list
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: plot_detectors
    - default: '[]'
      description: A list of extra detectors to be activated for the scan, by default
        [].
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: extra_dets
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'The exposure time in seconds for all detectors, by default None.

        If None, do not set any exposure time, and assume that detectors are already
        set'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: dwell
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The sample id. If given, the selected sample metadata is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample
    - annotation:
        type: typing.Optional[dict]
      default: '{}'
      description: 'A dictionary of positions relative to the sample center. Parameters
        not given will be assumed to

        be the default for the sampleholder (typically moving the sample into the
        beam at a typical angle)'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample_position
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The energy reference sample. If given, the selected reference sample
        is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: eref_sample
    - annotation:
        type: typing.Optional[float]
      default: None
      description: If not None, will set the beamline energy prior to the plan start.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: energy
    - annotation:
        type: typing.Optional[float]
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: polarization
    - annotation:
        type: int
      default: '1'
      description: The number of times to repeat the entire scan
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: repeat
    - default: 'True'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: open_shutter
    - annotation:
        type: typing.Optional[dict]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  nbs_spiral_fermat:
    description: Wraps spiral_fermat with additional arguments and default detectors.
    module: nbs_bl.plans.preprocessors
    name: nbs_spiral_fermat
    parameters:
    - description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_motor
    - description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_motor
    - annotation:
        type: float
      description: x center
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_start
    - annotation:
        type: float
      description: y center
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_start
    - annotation:
        type: float
      description: x width of spiral
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_range
    - annotation:
        type: float
      description: y width of spiral
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_range
    - annotation:
        type: float
      description: delta radius
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: dr
    - annotation:
        type: float
      description: radius gets divided by this
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: factor
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'Delta radius along the major axis of the ellipse, if not specifed

        defaults to dr.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: dr_y
    - annotation:
        type: typing.Optional[float]
      default: '0.0'
      description: Tilt angle in radians, default 0.0
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: tilt
    - default: None
      description: 'hook for customizing action of inner loop (messages per step).

        See docstring of :func:`bluesky.plan_stubs.one_nd_step` (the default)

        for details.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - default: 'False'
      description: If True, do not install suspenders
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: skip_suspenders
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A comment that will be added into the run metadata. If not provided,
        no comment will be added.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: comment
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A group name label that will be added into the run metadata.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group_name
    - annotation:
        type: list
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: plot_detectors
    - default: '[]'
      description: A list of extra detectors to be activated for the scan, by default
        [].
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: extra_dets
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'The exposure time in seconds for all detectors, by default None.

        If None, do not set any exposure time, and assume that detectors are already
        set'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: dwell
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The sample id. If given, the selected sample metadata is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample
    - annotation:
        type: typing.Optional[dict]
      default: '{}'
      description: 'A dictionary of positions relative to the sample center. Parameters
        not given will be assumed to

        be the default for the sampleholder (typically moving the sample into the
        beam at a typical angle)'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample_position
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The energy reference sample. If given, the selected reference sample
        is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: eref_sample
    - annotation:
        type: typing.Optional[float]
      default: None
      description: If not None, will set the beamline energy prior to the plan start.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: energy
    - annotation:
        type: typing.Optional[float]
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: polarization
    - annotation:
        type: int
      default: '1'
      description: The number of times to repeat the entire scan
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: repeat
    - default: 'True'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: open_shutter
    - annotation:
        type: typing.Optional[dict]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  nbs_spiral_square:
    description: Wraps spiral_square with additional arguments and default detectors.
    module: nbs_bl.plans.preprocessors
    name: nbs_spiral_square
    parameters:
    - description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_motor
    - description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_motor
    - annotation:
        type: float
      description: x center
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_center
    - annotation:
        type: float
      description: y center
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_center
    - annotation:
        type: float
      description: x width of spiral
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_range
    - annotation:
        type: float
      description: y width of spiral
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_range
    - annotation:
        type: float
      description: number of x axis points
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_num
    - annotation:
        type: float
      description: Number of y axis points.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_num
    - default: None
      description: 'hook for cutomizing action of inner loop (messages per step).

        See docstring of :func:`bluesky.plans.one_nd_step` (the default) for

        details.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - default: 'False'
      description: If True, do not install suspenders
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: skip_suspenders
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A comment that will be added into the run metadata. If not provided,
        no comment will be added.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: comment
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A group name label that will be added into the run metadata.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group_name
    - annotation:
        type: list
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: plot_detectors
    - default: '[]'
      description: A list of extra detectors to be activated for the scan, by default
        [].
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: extra_dets
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'The exposure time in seconds for all detectors, by default None.

        If None, do not set any exposure time, and assume that detectors are already
        set'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: dwell
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The sample id. If given, the selected sample metadata is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample
    - annotation:
        type: typing.Optional[dict]
      default: '{}'
      description: 'A dictionary of positions relative to the sample center. Parameters
        not given will be assumed to

        be the default for the sampleholder (typically moving the sample into the
        beam at a typical angle)'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample_position
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The energy reference sample. If given, the selected reference sample
        is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: eref_sample
    - annotation:
        type: typing.Optional[float]
      default: None
      description: If not None, will set the beamline energy prior to the plan start.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: energy
    - annotation:
        type: typing.Optional[float]
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: polarization
    - annotation:
        type: int
      default: '1'
      description: The number of times to repeat the entire scan
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: repeat
    - default: 'True'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: open_shutter
    - annotation:
        type: typing.Optional[dict]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  'null':
    description: Yield a no-op Message. (Primarily for debugging and testing.)
    module: bluesky.plan_stubs
    name: 'null'
    parameters: []
    properties:
      is_generator: false
  one_1d_step:
    description: Inner loop of a 1D step scan
    module: bluesky.plan_stubs
    name: one_1d_step
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      description: devices to read
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - annotation:
        type: __MOVABLE__
      convert_device_names: true
      description: The motor to move
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: motor
    - annotation:
        type: typing.Any
      description: Where to move the motor to
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: step
    - annotation:
        type: typing.Optional[__CALLABLE__]
      default: None
      description: "function to do the actual acquisition ::\n\n   def take_reading(dets,\
        \ name='primary'):\n        yield from ...\n\nCallable[List[OphydObj], Optional[str]]\
        \ -> Generator[Msg], optional\n\nDefaults to `trigger_and_read`"
      eval_expressions: true
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: take_reading
    properties:
      is_generator: false
  one_nd_step:
    description: Inner loop of an N-dimensional step scan
    module: bluesky.plan_stubs
    name: one_nd_step
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      description: devices to read
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - annotation:
        type: collections.abc.Mapping[__MOVABLE__, typing.Any]
      convert_device_names: true
      description: mapping motors to positions in this step
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: step
    - annotation:
        type: dict[__MOVABLE__, typing.Any]
      convert_device_names: true
      description: mapping motors to their last-set positions
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: pos_cache
    - annotation:
        type: typing.Optional[__CALLABLE__]
      default: None
      description: "function to do the actual acquisition ::\n\n   def take_reading(dets,\
        \ name='primary'):\n        yield from ...\n\nCallable[List[OphydObj], Optional[str]]\
        \ -> Generator[Msg], optional\n\nDefaults to `trigger_and_read`"
      eval_expressions: true
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: take_reading
    properties:
      is_generator: false
  one_shot:
    description: Inner loop of a count.
    module: bluesky.plan_stubs
    name: one_shot
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      description: devices to read
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - annotation:
        type: typing.Optional[__CALLABLE__]
      default: None
      description: "function to do the actual acquisition ::\n\n   def take_reading(dets,\
        \ name='primary'):\n        yield from ...\n\nCallable[List[OphydObj], Optional[str]]\
        \ -> Generator[Msg], optional\n\nDefaults to `trigger_and_read`"
      eval_expressions: true
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: take_reading
    properties:
      is_generator: false
  open_run:
    description: Mark the beginning of a new 'run'. Emit a RunStart document.
    module: bluesky.plan_stubs
    name: open_run
    parameters:
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      description: metadata
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    properties:
      is_generator: false
  open_shutter:
    module: haxpes.plans.bl_op_plans
    name: open_shutter
    parameters:
    - annotation:
        type: str
      default: '''default'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: shutter
    properties:
      is_generator: true
  optimizeL1:
    module: haxpes.tender.tender_ops
    name: optimizeL1
    parameters: []
    properties:
      is_generator: true
  optimizeL2:
    module: haxpes.tender.tender_ops
    name: optimizeL2
    parameters: []
    properties:
      is_generator: true
  outer_product_scan:
    description: Scan over a mesh; each motor is on an independent trajectory.
    module: bluesky.plans
    name: grid_scan
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      description: list of 'readable' objects
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - annotation:
        type: typing.Union[collections.abc.Iterable, bool, NoneType]
      default: None
      description: 'which axes should be snaked, either ``False`` (do not snake any
        axes),

        ``True`` (snake all axes) or a list of axes to snake. "Snaking" an axis

        is defined as following snake-like, winding trajectory instead of a

        simple left-to-right trajectory. The elements of the list are motors

        that are listed in `args`. The list must not contain the slowest

        (first) motor, since it can''t be snaked.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: snake_axes
    - default: None
      description: 'hook for customizing action of inner loop (messages per step).

        See docstring of :func:`bluesky.plan_stubs.one_nd_step` (the default)

        for details.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  pause:
    description: Pause and wait for the user to resume.
    module: bluesky.plan_stubs
    name: pause
    parameters: []
    properties:
      is_generator: false
  prepare:
    description: Prepare a device.
    module: bluesky.plan_stubs
    name: prepare
    parameters:
    - description: Device with 'prepare' method
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: obj
    - kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - annotation:
        type: typing.Optional[collections.abc.Hashable]
      default: None
      description: identifier used by 'wait'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group
    - annotation:
        type: bool
      default: 'False'
      description: 'If True, wait for completion before processing any more messages.

        False by default.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: wait
    - description: passed through to ``obj.prepare()``
      kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: false
  print_summary_wrapper:
    description: Print summary of plan as it goes by
    module: bluesky.preprocessors
    name: print_summary_wrapper
    parameters:
    - description: Must yield `Msg` objects
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: plan
    properties:
      is_generator: true
  ramp_plan:
    description: Take data while ramping one or more positioners.
    module: bluesky.plans
    name: ramp_plan
    parameters:
    - description: 'plan to start the ramp.  This will be run inside of a open/close

        run.


        This plan must return a `ophyd.StatusBase` object.'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: go_plan
    - annotation:
        type: __READABLE__
      convert_device_names: true
      description: signal to be monitored
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: monitor_sig
    - description: 'generator which takes no input


        This will be called for every data point.  This should create

        one or more events.'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: inner_plan_func
    - annotation:
        type: bool
      default: 'True'
      description: If True, add a pre data at beginning
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: take_pre_data
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'If not None, the maximum time the ramp can run.


        In seconds'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: timeout
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'If not None, take data no faster than this.  If None, take

        data as fast as possible


        If running the inner plan takes longer than `period` than take

        data with no dead time.


        In seconds.'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: period
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    properties:
      is_generator: true
  rd:
    description: Reads a single-value non-triggered object
    module: bluesky.plan_stubs
    name: rd
    parameters:
    - annotation:
        type: __READABLE__
      convert_device_names: true
      description: The device to be read
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: obj
    - annotation:
        type: typing.Any
      default: '0'
      description: "The value to return when not running in a \"live\" RunEngine.\n\
        This come ups when ::\n\n   ret = yield Msg('read', obj)\n   assert ret is\
        \ None\n\nthe plan is passed to `list` or some other iterator that\nrepeatedly\
        \ sends `None` into the plan to advance the\ngenerator."
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: default_value
    properties:
      is_generator: false
  read:
    description: Take a reading and add it to the current bundle of readings.
    module: bluesky.plan_stubs
    name: read
    parameters:
    - annotation:
        type: __READABLE__
      convert_device_names: true
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: obj
    properties:
      is_generator: false
  rel_adaptive_scan:
    description: Relative scan over one variable with adaptively tuned step size.
    module: bluesky.plans
    name: rel_adaptive_scan
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      description: list of 'readable' objects
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - annotation:
        type: str
      description: data field whose output is the focus of the adaptive tuning
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: target_field
    - annotation:
        type: __MOVABLE__
      convert_device_names: true
      description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: motor
    - annotation:
        type: float
      description: starting position of motor
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: start
    - annotation:
        type: float
      description: ending position of motor
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: stop
    - annotation:
        type: float
      description: smallest step for fast-changing regions
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: min_step
    - annotation:
        type: float
      description: largest step for slow-chaning regions
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: max_step
    - annotation:
        type: float
      description: desired fractional change in detector signal between steps
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: target_delta
    - annotation:
        type: bool
      description: whether backward steps are allowed -- this is concern with some
        motors
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: backstep
    - annotation:
        type: typing.Optional[float]
      default: '0.8'
      description: threshold for going backward and rescanning a region, default is
        0.8
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: threshold
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  rel_grid_scan:
    description: Scan over a mesh relative to current position.
    module: bluesky.plans
    name: rel_grid_scan
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      description: list of 'readable' objects
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - annotation:
        type: typing.Union[__MOVABLE__, typing.Any]
      convert_device_names: true
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - annotation:
        type: typing.Union[collections.abc.Iterable, bool, NoneType]
      default: None
      description: 'which axes should be snaked, either ``False`` (do not snake any
        axes),

        ``True`` (snake all axes) or a list of axes to snake. "Snaking" an axis

        is defined as following snake-like, winding trajectory instead of a

        simple left-to-right trajectory. The elements of the list are motors

        that are listed in `args`. The list must not contain the slowest

        (first) motor, since it can''t be snaked.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: snake_axes
    - default: None
      description: 'hook for customizing action of inner loop (messages per step).

        See docstring of :func:`bluesky.plan_stubs.one_nd_step` (the default)

        for details.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  rel_list_grid_scan:
    description: 'Scan over a mesh; each motor is on an independent trajectory. Each
      point is

      relative to the current position.'
    module: bluesky.plans
    name: rel_list_grid_scan
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      description: list of 'readable' objects
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - annotation:
        type: typing.Union[__MOVABLE__, typing.Any]
      convert_device_names: true
      description: "patterned like (``motor1, position_list1,``\n                ``motor2,\
        \ position_list2,``\n                ``motor3, position_list3,``\n       \
        \         ``...,``\n                ``motorN, position_listN``)\n\nThe first\
        \ motor is the \"slowest\", the outer loop. ``position_list``'s\nare lists\
        \ of positions, all lists must have the same length. Motors\ncan be any 'settable'\
        \ object (motor, temp controller, etc.)."
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - annotation:
        type: bool
      default: 'False'
      description: 'which axes should be snaked, either ``False`` (do not snake any
        axes),

        ``True`` (snake all axes) or a list of axes to snake. "Snaking" an axis

        is defined as following snake-like, winding trajectory instead of a

        simple left-to-right trajectory.The elements of the list are motors

        that are listed in `args`. The list must not contain the slowest

        (first) motor, since it can''t be snaked.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: snake_axes
    - default: None
      description: 'hook for customizing action of inner loop (messages per step).

        See docstring of :func:`bluesky.plan_stubs.one_nd_step` (the default)

        for details.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  rel_list_scan:
    description: Scan over one variable in steps relative to current position.
    module: bluesky.plans
    name: rel_list_scan
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      description: list of 'readable' objects
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - annotation:
        type: typing.Union[__MOVABLE__, typing.Any]
      convert_device_names: true
      description: "For one dimension, ``motor, [point1, point2, ....]``.\nIn general:\n\
        \n.. code-block:: python\n\n    motor1, [point1, point2, ...],\n    motor2,\
        \ [point1, point2, ...],\n    ...,\n    motorN, [point1, point2, ...]\n\n\
        Motors can be any 'settable' object (motor, temp controller, etc.)\npoint1,\
        \ point2 etc are relative to the current location."
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - default: None
      description: 'hook for customizing action of inner loop (messages per step)

        Expected signature: ``f(detectors, motor, step)``'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  rel_log_scan:
    description: Scan over one variable in log-spaced steps relative to current position.
    module: bluesky.plans
    name: rel_log_scan
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      description: list of 'readable' objects
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - annotation:
        type: __MOVABLE__
      convert_device_names: true
      description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: motor
    - annotation:
        type: float
      description: starting position of motor
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: start
    - annotation:
        type: float
      description: ending position of motor
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: stop
    - annotation:
        type: int
      description: number of steps
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: num
    - default: None
      description: 'hook for customizing action of inner loop (messages per step)

        Expected signature: ``f(detectors, motor, step)``'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  rel_scan:
    description: Scan over one multi-motor trajectory relative to current position.
    module: bluesky.plans
    name: rel_scan
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      description: list of 'readable' objects
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - annotation:
        type: typing.Union[__MOVABLE__, typing.Any]
      convert_device_names: true
      description: "For one dimension, ``motor, start, stop``.\nIn general:\n\n..\
        \ code-block:: python\n\n    motor1, start1, stop1,\n    motor2, start2, start2,\n\
        \    ...,\n    motorN, startN, stopN,\n\nMotors can be any 'settable' object\
        \ (motor, temp controller, etc.)"
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - default: None
      description: number of points
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: num
    - default: None
      description: 'hook for customizing action of inner loop (messages per step).

        See docstring of :func:`bluesky.plan_stubs.one_nd_step` (the default)

        for details.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  rel_set:
    description: Set a value relative to current value. Optionally, wait before continuing.
    module: bluesky.plan_stubs
    name: rel_set
    parameters:
    - annotation:
        type: __MOVABLE__
      convert_device_names: true
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: obj
    - annotation:
        type: typing.Any
      description: passed to obj.set()
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - annotation:
        type: typing.Optional[collections.abc.Hashable]
      default: None
      description: identifier used by 'wait'; None by default
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group
    - annotation:
        type: bool
      default: 'False'
      description: 'If True, wait for completion before processing any more messages.

        False by default.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: wait
    - description: passed to obj.set()
      kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: false
  rel_spiral:
    description: Relative spiral scan
    module: bluesky.plans
    name: rel_spiral
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - annotation:
        type: __MOVABLE__
      convert_device_names: true
      description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_motor
    - annotation:
        type: __MOVABLE__
      convert_device_names: true
      description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_motor
    - annotation:
        type: float
      description: x width of spiral
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_range
    - annotation:
        type: float
      description: y width of spiral
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_range
    - annotation:
        type: float
      description: Delta radius along the minor axis of the ellipse.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: dr
    - annotation:
        type: float
      description: Number of theta steps
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: nth
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'Delta radius along the major axis of the ellipse. If None, it

        defaults to dr.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: dr_y
    - annotation:
        type: float
      default: '0.0'
      description: Tilt angle in radians, default 0.0
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: tilt
    - default: None
      description: 'hook for customizing action of inner loop (messages per step).

        See docstring of :func:`bluesky.plan_stubs.one_nd_step` (the default)

        for details.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  rel_spiral_fermat:
    description: Relative fermat spiral scan
    module: bluesky.plans
    name: rel_spiral_fermat
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      description: list of 'readable' objects
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - annotation:
        type: __MOVABLE__
      convert_device_names: true
      description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_motor
    - annotation:
        type: __MOVABLE__
      convert_device_names: true
      description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_motor
    - annotation:
        type: float
      description: x width of spiral
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_range
    - annotation:
        type: float
      description: y width of spiral
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_range
    - annotation:
        type: float
      description: delta radius
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: dr
    - annotation:
        type: float
      description: radius gets divided by this
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: factor
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'Delta radius along the major axis of the ellipse, if not specifed

        defaults to dr'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: dr_y
    - annotation:
        type: typing.Optional[float]
      default: '0.0'
      description: Tilt angle in radians, default 0.0
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: tilt
    - default: None
      description: 'hook for customizing action of inner loop (messages per step).

        See docstring of :func:`bluesky.plan_stubs.one_nd_step` (the default)

        for details.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  rel_spiral_square:
    description: Relative square spiral scan, centered around current (x, y) position.
    module: bluesky.plans
    name: rel_spiral_square
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      description: list of 'readable' objects
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - annotation:
        type: __MOVABLE__
      convert_device_names: true
      description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_motor
    - annotation:
        type: __MOVABLE__
      convert_device_names: true
      description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_motor
    - annotation:
        type: float
      description: x width of spiral
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_range
    - annotation:
        type: float
      description: y width of spiral
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_range
    - annotation:
        type: float
      description: number of x axis points
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_num
    - annotation:
        type: float
      description: Number of y axis points.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_num
    - default: None
      description: 'hook for cutomizing action of inner loop (messages per step).

        See docstring of :func:`bluesky.plans.one_nd_step` (the default) for

        details.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  relative_adaptive_scan:
    description: Relative scan over one variable with adaptively tuned step size.
    module: bluesky.plans
    name: rel_adaptive_scan
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      description: list of 'readable' objects
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - annotation:
        type: str
      description: data field whose output is the focus of the adaptive tuning
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: target_field
    - annotation:
        type: __MOVABLE__
      convert_device_names: true
      description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: motor
    - annotation:
        type: float
      description: starting position of motor
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: start
    - annotation:
        type: float
      description: ending position of motor
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: stop
    - annotation:
        type: float
      description: smallest step for fast-changing regions
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: min_step
    - annotation:
        type: float
      description: largest step for slow-chaning regions
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: max_step
    - annotation:
        type: float
      description: desired fractional change in detector signal between steps
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: target_delta
    - annotation:
        type: bool
      description: whether backward steps are allowed -- this is concern with some
        motors
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: backstep
    - annotation:
        type: typing.Optional[float]
      default: '0.8'
      description: threshold for going backward and rescanning a region, default is
        0.8
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: threshold
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  relative_inner_product_scan:
    module: bluesky.plans
    name: relative_inner_product_scan
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - annotation:
        type: int
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: num
    - annotation:
        type: typing.Union[__MOVABLE__, typing.Any]
      convert_device_names: true
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  relative_list_scan:
    description: Scan over one variable in steps relative to current position.
    module: bluesky.plans
    name: rel_list_scan
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      description: list of 'readable' objects
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - annotation:
        type: typing.Union[__MOVABLE__, typing.Any]
      convert_device_names: true
      description: "For one dimension, ``motor, [point1, point2, ....]``.\nIn general:\n\
        \n.. code-block:: python\n\n    motor1, [point1, point2, ...],\n    motor2,\
        \ [point1, point2, ...],\n    ...,\n    motorN, [point1, point2, ...]\n\n\
        Motors can be any 'settable' object (motor, temp controller, etc.)\npoint1,\
        \ point2 etc are relative to the current location."
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - default: None
      description: 'hook for customizing action of inner loop (messages per step)

        Expected signature: ``f(detectors, motor, step)``'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  relative_log_scan:
    description: Scan over one variable in log-spaced steps relative to current position.
    module: bluesky.plans
    name: rel_log_scan
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      description: list of 'readable' objects
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - annotation:
        type: __MOVABLE__
      convert_device_names: true
      description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: motor
    - annotation:
        type: float
      description: starting position of motor
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: start
    - annotation:
        type: float
      description: ending position of motor
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: stop
    - annotation:
        type: int
      description: number of steps
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: num
    - default: None
      description: 'hook for customizing action of inner loop (messages per step)

        Expected signature: ``f(detectors, motor, step)``'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  relative_outer_product_scan:
    description: Scan over a mesh relative to current position.
    module: bluesky.plans
    name: rel_grid_scan
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      description: list of 'readable' objects
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - annotation:
        type: typing.Union[__MOVABLE__, typing.Any]
      convert_device_names: true
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - annotation:
        type: typing.Union[collections.abc.Iterable, bool, NoneType]
      default: None
      description: 'which axes should be snaked, either ``False`` (do not snake any
        axes),

        ``True`` (snake all axes) or a list of axes to snake. "Snaking" an axis

        is defined as following snake-like, winding trajectory instead of a

        simple left-to-right trajectory. The elements of the list are motors

        that are listed in `args`. The list must not contain the slowest

        (first) motor, since it can''t be snaked.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: snake_axes
    - default: None
      description: 'hook for customizing action of inner loop (messages per step).

        See docstring of :func:`bluesky.plan_stubs.one_nd_step` (the default)

        for details.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  relative_scan:
    description: Scan over one multi-motor trajectory relative to current position.
    module: bluesky.plans
    name: rel_scan
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      description: list of 'readable' objects
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - annotation:
        type: typing.Union[__MOVABLE__, typing.Any]
      convert_device_names: true
      description: "For one dimension, ``motor, start, stop``.\nIn general:\n\n..\
        \ code-block:: python\n\n    motor1, start1, stop1,\n    motor2, start2, start2,\n\
        \    ...,\n    motorN, startN, stopN,\n\nMotors can be any 'settable' object\
        \ (motor, temp controller, etc.)"
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - default: None
      description: number of points
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: num
    - default: None
      description: 'hook for customizing action of inner loop (messages per step).

        See docstring of :func:`bluesky.plan_stubs.one_nd_step` (the default)

        for details.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  relative_spiral:
    description: Relative spiral scan
    module: bluesky.plans
    name: rel_spiral
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - annotation:
        type: __MOVABLE__
      convert_device_names: true
      description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_motor
    - annotation:
        type: __MOVABLE__
      convert_device_names: true
      description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_motor
    - annotation:
        type: float
      description: x width of spiral
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_range
    - annotation:
        type: float
      description: y width of spiral
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_range
    - annotation:
        type: float
      description: Delta radius along the minor axis of the ellipse.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: dr
    - annotation:
        type: float
      description: Number of theta steps
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: nth
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'Delta radius along the major axis of the ellipse. If None, it

        defaults to dr.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: dr_y
    - annotation:
        type: float
      default: '0.0'
      description: Tilt angle in radians, default 0.0
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: tilt
    - default: None
      description: 'hook for customizing action of inner loop (messages per step).

        See docstring of :func:`bluesky.plan_stubs.one_nd_step` (the default)

        for details.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  relative_spiral_fermat:
    description: Relative fermat spiral scan
    module: bluesky.plans
    name: rel_spiral_fermat
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      description: list of 'readable' objects
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - annotation:
        type: __MOVABLE__
      convert_device_names: true
      description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_motor
    - annotation:
        type: __MOVABLE__
      convert_device_names: true
      description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_motor
    - annotation:
        type: float
      description: x width of spiral
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_range
    - annotation:
        type: float
      description: y width of spiral
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_range
    - annotation:
        type: float
      description: delta radius
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: dr
    - annotation:
        type: float
      description: radius gets divided by this
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: factor
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'Delta radius along the major axis of the ellipse, if not specifed

        defaults to dr'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: dr_y
    - annotation:
        type: typing.Optional[float]
      default: '0.0'
      description: Tilt angle in radians, default 0.0
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: tilt
    - default: None
      description: 'hook for customizing action of inner loop (messages per step).

        See docstring of :func:`bluesky.plan_stubs.one_nd_step` (the default)

        for details.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  remove_filter:
    module: haxpes.plans.bl_op_plans
    name: remove_filter
    parameters: []
    properties:
      is_generator: true
  remove_suspender:
    description: Remove a suspender during a plan.
    module: bluesky.plan_stubs
    name: remove_suspender
    parameters:
    - description: The suspender to remove
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: suspender
    properties:
      is_generator: false
  repeat:
    description: Repeat a plan num times with delay and checkpoint between each repeat.
    module: bluesky.plan_stubs
    name: repeat
    parameters:
    - description: Callable that returns an iterable of Msg objects
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: plan
    - annotation:
        type: typing.Optional[int]
      default: '1'
      description: 'number of readings to take; default is 1


        If None, capture data until canceled'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: num
    - annotation:
        type: typing.Union[float, collections.abc.Iterable[float]]
      default: '0.0'
      description: time delay between successive readings; default is 0
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: delay
    properties:
      is_generator: false
  repeat_plan_sequence_for_duration:
    description: Repeat a sequence of plans for a specified duration.
    module: nbs_bl.plans.metaplans
    name: repeat_plan_sequence_for_duration
    parameters:
    - annotation:
        type: typing.List[__PLAN__]
      convert_plan_names: true
      description: List of plan names or callables to run in sequence.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: plans
    - annotation:
        type: typing.List[typing.List]
      description: List of argument lists, one for each plan.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: plan_args_list
    - annotation:
        type: typing.List[typing.Dict]
      description: List of kwargs dicts, one for each plan.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: plan_kwargs_list
    - annotation:
        type: float
      description: Total duration to repeat the sequence (seconds).
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: duration
    properties:
      is_generator: true
  repeat_plan_sequence_while_condition:
    description: Repeat a sequence of plans while a condition plan returns True.
    module: nbs_bl.plans.metaplans
    name: repeat_plan_sequence_while_condition
    parameters:
    - annotation:
        type: typing.List[__PLAN__]
      convert_plan_names: true
      description: List of plan names or callables to run in sequence.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: plans
    - annotation:
        type: typing.List[typing.List]
      description: List of argument lists, one for each plan.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: plan_args_list
    - annotation:
        type: typing.List[typing.Dict]
      description: List of kwargs dicts, one for each plan.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: plan_kwargs_list
    - annotation:
        type: __PLAN__
      convert_plan_names: true
      description: A plan that returns a boolean; controls loop continuation.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: condition
    - annotation:
        type: typing.List
      default: None
      description: Arguments for the condition plan.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: condition_args
    - annotation:
        type: typing.Dict
      default: None
      description: Keyword arguments for the condition plan.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: condition_kwargs
    properties:
      is_generator: true
  repeater:
    description: Generate n chained copies of the messages from gen_func
    module: bluesky.plan_stubs
    name: repeater
    parameters:
    - annotation:
        type: typing.Optional[int]
      description: total number of repetitions; if None, infinite
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: n
    - description: returns generator instance
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: gen_func
    - kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: false
  reset_feedback:
    description: Resets the latching permit.
    module: haxpes.tender.funcs
    name: reset_feedback
    parameters: []
    properties:
      is_generator: true
  run_XPS_soft:
    module: haxpes.soft.soft_ops
    name: wrapper
    parameters:
    - kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  run_XPS_tender:
    module: haxpes.tender.tender_ops
    name: run_XPS_tender
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: sample_list
    - default: 'False'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: close_shutter
    properties:
      is_generator: true
  run_peakXPS_soft:
    module: haxpes.soft.soft_ops
    name: wrapper
    parameters:
    - kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  run_peakXPS_tender:
    module: haxpes.tender.tender_ops
    name: run_peakXPS_tender
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: sample_list
    - default: 'False'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: close_shutter
    properties:
      is_generator: true
  save:
    description: Close a bundle of readings and emit a completed Event document.
    module: bluesky.plan_stubs
    name: save
    parameters: []
    properties:
      is_generator: false
  scan:
    description: Scan over one multi-motor trajectory.
    module: bluesky.plans
    name: scan
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      description: list of 'readable' objects
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - annotation:
        type: typing.Union[__MOVABLE__, typing.Any]
      convert_device_names: true
      description: "For one dimension, ``motor, start, stop``.\nIn general:\n\n..\
        \ code-block:: python\n\n    motor1, start1, stop1,\n    motor2, start2, stop2,\n\
        \    ...,\n    motorN, startN, stopN\n\nMotors can be any 'settable' object\
        \ (motor, temp controller, etc.)"
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - annotation:
        type: typing.Optional[int]
      default: None
      description: number of points
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: num
    - default: None
      description: 'hook for customizing action of inner loop (messages per step).

        See docstring of :func:`bluesky.plan_stubs.one_nd_step` (the default)

        for details.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  scan_nd:
    description: Scan over an arbitrary N-dimensional trajectory.
    module: bluesky.plans
    name: scan_nd
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - description: cycler.Cycler object mapping movable interfaces to positions
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: cycler
    - default: None
      description: 'hook for customizing action of inner loop (messages per step).

        See docstring of :func:`bluesky.plan_stubs.one_nd_step` (the default)

        for details.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  setL1:
    module: haxpes.tender.tender_ops
    name: setL1
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: stripe
    properties:
      is_generator: true
  setL2_plane:
    module: haxpes.tender.tender_ops
    name: setL2_plane
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: stripe
    properties:
      is_generator: true
  setL2_toroid:
    module: haxpes.tender.tender_ops
    name: setL2_toroid
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: stripe
    properties:
      is_generator: true
  set_FG:
    module: haxpes.plans.bl_op_plans
    name: set_FG
    parameters:
    - annotation:
        type: float
      default: '11'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: energy
    - annotation:
        type: float
      default: '75'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: Vgrid
    - annotation:
        type: float
      default: '10'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: delay_seconds
    properties:
      is_generator: true
  set_crystal:
    module: haxpes.tender.tender_ops
    name: set_crystal
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: crystalSP
    - default: '1'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: roll_correct
    properties:
      is_generator: true
  set_exposure:
    description: Sets the exposure time for all active detectors
    module: nbs_bl.plans.plan_stubs
    name: set_exposure
    parameters:
    - annotation:
        type: typing.Optional[float]
      default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: time
    - default: '[]'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: extra_dets
    properties:
      is_generator: true
  set_feedback:
    description: 'Turns feedback axis on. If find_new_sp is True, then it grabs the
      current

      value and sets setpoint.'
    module: haxpes.tender.funcs
    name: set_feedback
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: axis
    - default: 'True'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: set_new_sp
    properties:
      is_generator: true
  set_photon_energy:
    description: 'Optimize the photon energy for the current beam mode. Automatically
      determines

      whether to use the soft or tender beam settings.'
    module: haxpes.hax_ops
    name: set_photon_energy
    parameters:
    - description: The photon energy to set in eV.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: energy
    - default: 'True'
      description: Whether to set the optimal harmonic for the current beam mode.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: use_optimal_harmonic
    - default: 'True'
      description: Whether to set the optimal crystal for the current beam mode.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: use_optimal_crystal
    properties:
      is_generator: true
  set_photon_energy_soft:
    module: haxpes.soft.soft_ops
    name: wrapper
    parameters:
    - kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  set_photon_energy_tender:
    module: haxpes.tender.tender_ops
    name: set_photon_energy_tender
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: energySP
    - default: 'True'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: use_optimal_harmonic
    - default: 'True'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: use_optimal_crystal
    properties:
      is_generator: true
  set_roi:
    module: nbs_bl.plans.plan_stubs
    name: set_roi
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: label
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: llim
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: ulim
    properties:
      is_generator: true
  set_sample:
    description: Set the current sample without moving the sample holder.
    module: nbs_bl.samples
    name: set_sample
    parameters:
    - description: Identifier of the sample to select
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: sample_id
    properties:
      is_generator: true
  setup_peakXAS:
    description: setup peak analyzer in fixed mode for XAS
    module: haxpes.plans.bl_op_plans
    name: setup_peakXAS
    parameters:
    - annotation:
        type: float
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: energy_center
    - annotation:
        type: int
      default: '50'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: pass_energy
    - annotation:
        type: str
      default: '''Angular'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: lens_mode
    properties:
      is_generator: true
  sleep:
    description: Tell the RunEngine to sleep, while asynchronously doing other processing.
    module: bluesky.plan_stubs
    name: sleep
    parameters:
    - annotation:
        type: float
      description: seconds
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: time
    properties:
      is_generator: false
  spiral:
    description: Spiral scan, centered around (x_start, y_start)
    module: bluesky.plans
    name: spiral
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_motor
    - description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_motor
    - annotation:
        type: float
      description: x center
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_start
    - annotation:
        type: float
      description: y center
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_start
    - annotation:
        type: float
      description: x width of spiral
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_range
    - annotation:
        type: float
      description: y width of spiral
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_range
    - annotation:
        type: float
      description: Delta radius along the minor axis of the ellipse.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: dr
    - annotation:
        type: float
      description: Number of theta steps
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: nth
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'Delta radius along the major axis of the ellipse. If None, defaults
        to

        dr.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: dr_y
    - annotation:
        type: typing.Optional[float]
      default: '0.0'
      description: Tilt angle in radians, default 0.0
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: tilt
    - default: None
      description: 'hook for customizing action of inner loop (messages per step).

        See docstring of :func:`bluesky.plan_stubs.one_nd_step` (the default)

        for details.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  spiral_fermat:
    description: Absolute fermat spiral scan, centered around (x_start, y_start)
    module: bluesky.plans
    name: spiral_fermat
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      description: list of 'readable' objects
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_motor
    - description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_motor
    - annotation:
        type: float
      description: x center
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_start
    - annotation:
        type: float
      description: y center
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_start
    - annotation:
        type: float
      description: x width of spiral
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_range
    - annotation:
        type: float
      description: y width of spiral
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_range
    - annotation:
        type: float
      description: delta radius
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: dr
    - annotation:
        type: float
      description: radius gets divided by this
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: factor
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'Delta radius along the major axis of the ellipse, if not specifed

        defaults to dr.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: dr_y
    - annotation:
        type: typing.Optional[float]
      default: '0.0'
      description: Tilt angle in radians, default 0.0
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: tilt
    - default: None
      description: 'hook for customizing action of inner loop (messages per step).

        See docstring of :func:`bluesky.plan_stubs.one_nd_step` (the default)

        for details.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  spiral_square:
    description: Absolute square spiral scan, centered around (x_center, y_center)
    module: bluesky.plans
    name: spiral_square
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      description: list of 'readable' objects
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_motor
    - description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_motor
    - annotation:
        type: float
      description: x center
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_center
    - annotation:
        type: float
      description: y center
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_center
    - annotation:
        type: float
      description: x width of spiral
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_range
    - annotation:
        type: float
      description: y width of spiral
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_range
    - annotation:
        type: float
      description: number of x axis points
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: x_num
    - annotation:
        type: float
      description: Number of y axis points.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_num
    - default: None
      description: 'hook for cutomizing action of inner loop (messages per step).

        See docstring of :func:`bluesky.plans.one_nd_step` (the default) for

        details.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  stage:
    description: '''Stage'' a device (i.e., prepare it for use, ''arm'' it).'
    module: bluesky.plan_stubs
    name: stage
    parameters:
    - annotation:
        type: __DEVICE__
      convert_device_names: true
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: obj
    - annotation:
        type: typing.Optional[collections.abc.Hashable]
      default: None
      description: identifier used by 'wait'; None by default
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group
    - annotation:
        type: typing.Optional[bool]
      default: None
      description: 'If True, wait for completion before processing any more messages.

        False by default.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: wait
    properties:
      is_generator: false
  stage_all:
    description: '''Stage'' one or more devices (i.e., prepare them for use, ''arm''
      them).'
    module: bluesky.plan_stubs
    name: stage_all
    parameters:
    - annotation:
        type: __DEVICE__
      convert_device_names: true
      description: device1, device2, device3, ...
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - annotation:
        type: typing.Optional[collections.abc.Hashable]
      default: None
      description: identifier used by 'wait'; None by default
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group
    properties:
      is_generator: false
  stop:
    description: Stop a device.
    module: bluesky.plan_stubs
    name: stop
    parameters:
    - annotation:
        type: __DEVICE__
      convert_device_names: true
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: obj
    properties:
      is_generator: false
  stop_feedback:
    description: Turns both feedbacks off.
    module: haxpes.tender.funcs
    name: stop_feedback
    parameters: []
    properties:
      is_generator: true
  subscribe:
    description: Subscribe the stream of emitted documents.
    module: bluesky.plan_stubs
    name: subscribe
    parameters:
    - annotation:
        type: str
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: name
    - annotation:
        type: __CALLABLE__
      description: 'Expected signature: ``f(name, doc)`` where ``name`` is one of
        the

        strings above (''all, ''start'', ...) and ``doc`` is a dict'
      eval_expressions: true
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: func
    properties:
      is_generator: false
  survey_xps:
    description: 'Survey

      Perform a binding energy XPS scan for Survey

      Start: -2.0 eV

      Stop: 1500.0 eV

      Step size: 0.75 eV'
    module: nbs_bl.plans.preprocessors
    name: survey_xps
    parameters:
    - description: The analyzer settings for the XPS scan, with keys "dwell_time",
        "pass_energy", "lens_mode"
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: analyzer_settings
    - annotation:
        type: typing.Union[float, collections.abc.Iterable[float]]
      default: '0.0'
      description: Time delay in seconds between successive readings; default is 0.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: delay
    - default: '1'
      description: The number of sweeps to perform. Default is 1.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: sweeps
    - default: None
      description: If not None, will set the beamline energy prior to the plan start.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: energy
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: export_filename
    - default: None
      description: "hook for customizing action of inner loop (messages per step)\n\
        Expected signature ::\n\n   def f(detectors: Iterable[OphydObj]) -> Generator[Msg]:\n\
        \       ..."
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_shot
    - default: 'False'
      description: If True, do not install suspenders
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: skip_suspenders
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A comment that will be added into the run metadata. If not provided,
        no comment will be added.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: comment
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A group name label that will be added into the run metadata.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group_name
    - annotation:
        type: list
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: plot_detectors
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The sample id. If given, the selected sample metadata is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample
    - annotation:
        type: typing.Optional[dict]
      default: '{}'
      description: 'A dictionary of positions relative to the sample center. Parameters
        not given will be assumed to

        be the default for the sampleholder (typically moving the sample into the
        beam at a typical angle)'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample_position
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The energy reference sample. If given, the selected reference sample
        is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: eref_sample
    - annotation:
        type: typing.Optional[float]
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: polarization
    - annotation:
        type: int
      default: '1'
      description: The number of times to repeat the entire scan
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: repeat
    - default: 'True'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: open_shutter
    - annotation:
        type: typing.Optional[dict]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  trigger:
    description: Trigger and acquisition. Optionally, wait for it to complete.
    module: bluesky.plan_stubs
    name: trigger
    parameters:
    - annotation:
        type: __DEVICE__
      convert_device_names: true
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: obj
    - annotation:
        type: typing.Optional[collections.abc.Hashable]
      default: None
      description: identifier used by 'wait'; None by default
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group
    - annotation:
        type: bool
      default: 'False'
      description: 'If True, wait for completion before processing any more messages.

        False by default.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: wait
    properties:
      is_generator: false
  trigger_and_read:
    description: Trigger and read a list of detectors and bundle readings into one
      Event.
    module: bluesky.plan_stubs
    name: trigger_and_read
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      description: devices to trigger (if they have a trigger method) and then read
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: devices
    - annotation:
        type: str
      default: '''primary'''
      description: 'event stream name, a convenient human-friendly identifier; default

        name is ''primary'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: name
    properties:
      is_generator: false
  tune_centroid:
    description: 'plan: tune a motor to the centroid of signal(motor)'
    module: bluesky.plans
    name: tune_centroid
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      description: list of 'readable' objects
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - annotation:
        type: str
      description: detector field whose output is to maximize
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: signal
    - description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: motor
    - annotation:
        type: float
      description: start of range
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: start
    - annotation:
        type: float
      description: 'end of range, note: start < stop'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: stop
    - annotation:
        type: float
      description: smallest step size to use.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: min_step
    - annotation:
        type: int
      default: '10'
      description: number of points with each traversal, default = 10
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: num
    - annotation:
        type: float
      default: '3.0'
      description: 'used in calculating new range after each pass


        note: step_factor > 1.0, default = 3'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: step_factor
    - annotation:
        type: bool
      default: 'False'
      description: if False (default), always scan from start to stop
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: snake
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  tune_x2pitch:
    module: haxpes.tender.tender_ops
    name: tune_x2pitch
    parameters: []
    properties:
      is_generator: true
  tweak:
    description: Move and motor and read a detector with an interactive prompt.
    module: bluesky.plans
    name: tweak
    parameters:
    - annotation:
        type: __READABLE__
      convert_device_names: true
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detector
    - annotation:
        type: str
      description: data field whose output is the focus of the adaptive tuning
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: target_field
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: motor
    - annotation:
        type: float
      description: initial suggestion for step size
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: step
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  unmonitor:
    description: Stop monitoring.
    module: bluesky.plan_stubs
    name: unmonitor
    parameters:
    - annotation:
        type: __READABLE__
      convert_device_names: true
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: obj
    properties:
      is_generator: false
  unstage:
    description: '''Unstage'' a device (i.e., put it in standby, ''disarm'' it).'
    module: bluesky.plan_stubs
    name: unstage
    parameters:
    - annotation:
        type: __DEVICE__
      convert_device_names: true
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: obj
    - annotation:
        type: typing.Optional[collections.abc.Hashable]
      default: None
      description: identifier used by 'wait'; None by default
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group
    - annotation:
        type: typing.Optional[bool]
      default: None
      description: 'If True, wait for completion before processing any more messages.

        False by default.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: wait
    properties:
      is_generator: false
  unstage_all:
    description: '''Unstage'' one or more devices (i.e., put them in standby, ''disarm''
      them).'
    module: bluesky.plan_stubs
    name: unstage_all
    parameters:
    - annotation:
        type: __DEVICE__
      convert_device_names: true
      description: device1, device2, device3, ...
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - annotation:
        type: typing.Optional[collections.abc.Hashable]
      default: None
      description: identifier used by 'wait'; None by default
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group
    properties:
      is_generator: false
  unsubscribe:
    description: Remove a subscription.
    module: bluesky.plan_stubs
    name: unsubscribe
    parameters:
    - annotation:
        type: int
      description: token returned by processing a 'subscribe' message
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: token
    properties:
      is_generator: false
  vb_xps:
    description: 'VB

      Perform a binding energy XPS scan for VB

      Start: -5.0 eV

      Stop: 20.0 eV

      Step size: 0.05 eV'
    module: nbs_bl.plans.preprocessors
    name: vb_xps
    parameters:
    - description: The analyzer settings for the XPS scan, with keys "dwell_time",
        "pass_energy", "lens_mode"
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: analyzer_settings
    - annotation:
        type: typing.Union[float, collections.abc.Iterable[float]]
      default: '0.0'
      description: Time delay in seconds between successive readings; default is 0.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: delay
    - default: '1'
      description: The number of sweeps to perform. Default is 1.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: sweeps
    - default: None
      description: If not None, will set the beamline energy prior to the plan start.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: energy
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: export_filename
    - default: None
      description: "hook for customizing action of inner loop (messages per step)\n\
        Expected signature ::\n\n   def f(detectors: Iterable[OphydObj]) -> Generator[Msg]:\n\
        \       ..."
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_shot
    - default: 'False'
      description: If True, do not install suspenders
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: skip_suspenders
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A comment that will be added into the run metadata. If not provided,
        no comment will be added.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: comment
    - annotation:
        type: typing.Optional[str]
      default: None
      description: A group name label that will be added into the run metadata.
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group_name
    - annotation:
        type: list
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: plot_detectors
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The sample id. If given, the selected sample metadata is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample
    - annotation:
        type: typing.Optional[dict]
      default: '{}'
      description: 'A dictionary of positions relative to the sample center. Parameters
        not given will be assumed to

        be the default for the sampleholder (typically moving the sample into the
        beam at a typical angle)'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: sample_position
    - annotation:
        type: typing.Optional[str]
      default: None
      description: The energy reference sample. If given, the selected reference sample
        is set
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: eref_sample
    - annotation:
        type: typing.Optional[float]
      default: None
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: polarization
    - annotation:
        type: int
      default: '1'
      description: The number of times to repeat the entire scan
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: repeat
    - default: 'True'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: open_shutter
    - annotation:
        type: typing.Optional[dict]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  wait:
    description: Wait for all statuses in a group to report being finished.
    module: bluesky.plan_stubs
    name: wait
    parameters:
    - annotation:
        type: typing.Optional[collections.abc.Hashable]
      default: None
      description: Identifier given to `abs_set`, `rel_set`, `trigger`; None by default
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: group
    - annotation:
        type: typing.Optional[float]
      default: None
      description: 'The maximum duration, in seconds, to wait for all objects in the
        group to complete.

        If the timeout expires and `error_on_timeout` is set to True, a TimeoutError
        is raised.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: timeout
    - annotation:
        type: bool
      default: 'True'
      description: 'Specifies the behavior when the timeout is reached:

        - If True, a TimeoutError is raised if the operations do not complete within
        the specified timeout.

        - If False, the method returns once all objects are done.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: error_on_timeout
    properties:
      is_generator: false
  wait_for:
    description: 'Low-level: wait for a list of ``asyncio.Future`` objects to set
      (complete).'
    module: bluesky.plan_stubs
    name: wait_for
    parameters:
    - annotation:
        type: collections.abc.Iterable[__CALLABLE__]
      description: iterable collection of coroutine functions that take no arguments
      eval_expressions: true
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: futures
    - description: passed through to ``asyncio.wait()``
      kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: false
  withdraw_samplebar:
    module: haxpes.plans.bl_op_plans
    name: withdraw_samplebar
    parameters:
    - annotation:
        type: float
      default: '535'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: y_out
    properties:
      is_generator: true
  x2x_scan:
    description: Relatively scan over two motors in a 2:1 ratio
    module: bluesky.plans
    name: x2x_scan
    parameters:
    - annotation:
        type: collections.abc.Sequence[__READABLE__]
      convert_device_names: true
      description: list of 'readable' objects
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - description: The second motor will move half as much as the first
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: motor1
    - description: The second motor will move half as much as the first
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: motor2
    - annotation:
        type: float
      description: 'The relative limits of the first motor.  The second motor

        will move between ``start / 2`` and ``stop / 2``'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: start
    - annotation:
        type: float
      description: 'The relative limits of the first motor.  The second motor

        will move between ``start / 2`` and ``stop / 2``'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: stop
    - annotation:
        type: int
      description: number of steps in the scan
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: num
    - default: None
      description: 'hook for cutomizing action of inner loop (messages per step).

        See docstring of :func:`bluesky.plan_stubs.one_nd_step` (the default)

        for details.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_step
    - annotation:
        type: typing.Optional[dict[str, typing.Any]]
      default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  xalign_fs4:
    description: Tunes second crystal roll to align beam centroid at spx
    module: haxpes.tender.funcs
    name: xalign_fs4
    parameters:
    - default: '448'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: spx
    properties:
      is_generator: true
  xcoursealign_i0:
    description: 'Aligns the beam on I0 using the second crystal roll motor with a
      course

      step.'
    module: haxpes.tender.funcs
    name: xcoursealign_i0
    parameters:
    - default: '1'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: steptime
    properties:
      is_generator: true
  xfinealign_i0:
    description: 'Aligns the beam on I0 using the second crystal roll motor with a
      fine step.

      Assumes slits are in place.'
    module: haxpes.tender.funcs
    name: xfinealign_i0
    parameters:
    - default: '1'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: steptime
    properties:
      is_generator: true
  yalign_fs4_xps:
    description: 'Tunes second crystal perpendicular offset to align beam centroid
      at spy.

      ONLY USE FOR PHOTOEMISSION. Motor will move to pre-defined position when

      scanning energy'
    module: haxpes.tender.funcs
    name: yalign_fs4_xps
    parameters:
    - default: '326'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: spy
    properties:
      is_generator: true
  ycoursealign_i0:
    description: 'Aligns the beam on I0 using the second crystal pitch motor.

      Assumes slits are in place for photoemission.'
    module: haxpes.tender.funcs
    name: ycoursealign_i0
    parameters:
    - default: '1'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: steptime
    properties:
      is_generator: true
  yfinealign_i0:
    description: 'Aligns the beam on I0 using the second crystal fine pitch piezomotor.

      Assumes slits are in place for photoemission.'
    module: haxpes.tender.funcs
    name: yfinealign_i0
    parameters:
    - default: '1'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: steptime
    properties:
      is_generator: true
